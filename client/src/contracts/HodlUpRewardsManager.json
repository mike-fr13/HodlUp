{
  "contractName": "HodlUpRewardsManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardApy",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAdded",
          "type": "address"
        }
      ],
      "name": "ContractAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardApy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setRewardToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_apy",
          "type": "uint256"
        }
      ],
      "name": "setApy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUSDPriceFromOracle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "addContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "generateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAllRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardApy\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAdded\",\"type\":\"address\"}],\"name\":\"ContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"addContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAllRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUSDPriceFromOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardApy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"}],\"name\":\"setApy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract manages the distribution of rewards in the form of an ERC20 token (HODL) to users who hold specific ERC20 tokens.\",\"events\":{\"ContractAdded(address)\":{\"details\":\"Emitted when a new contract is added to the system.\",\"params\":{\"contractAdded\":\"The address of the contract that was added.\"}},\"RewardsClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when a user claims rewards.\",\"params\":{\"amount\":\"The amount of tokens claimed.\",\"date\":\"The timestamp of the claim.\",\"token\":\"The ERC20 token that was claimed.\",\"user\":\"The user who claimed the rewards.\"}}},\"kind\":\"dev\",\"methods\":{\"addContract(address)\":{\"details\":\"Adds an authorized contract that is allowed to generate rewards for users. Only the contract owner can call this function.\",\"params\":{\"_contract\":\"The address of the authorized contract.\"}},\"claimAllRewards()\":{\"details\":\"Allows a user to claim all of their available rewards in the reward token. The user must have a balance greater than 0 to claim any rewards.\"},\"claimRewards(uint256)\":{\"details\":\"Allows a user to claim their rewards in the specified amount of tokens. The user must have a balance greater than or equal to the amount being claimed.\",\"params\":{\"_amount\":\"The amount of tokens to claim as rewards.\"}},\"constructor\":{\"details\":\"Constructor function\",\"params\":{\"_rewardApy\":\"The annual percentage yield (APY) for the reward token\",\"_rewardTokenAddress\":\"The address of the reward token (HODL)\"}},\"generateRewards(address,address,uint256)\":{\"details\":\"Generates rewards for a user based on the given amount of tokens and the current APY. Only authorized contracts can call this function.\",\"params\":{\"_amount\":\"The amount of tokens to generate rewards for.\",\"_token\":\"The ERC20 token used to generate the rewards.\",\"_user\":\"The address of the user to receive the rewards.\"}},\"getUSDPriceFromOracle(address)\":{\"details\":\"Get the USD price of an ERC20 token from its associated Chainlink oracle\",\"params\":{\"_token\":\"The ERC20 token for which to get the USD price\"},\"returns\":{\"_0\":\"The USD price of the ERC20 token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApy(uint256)\":{\"details\":\"Set the reward APY\",\"params\":{\"_apy\":\"The new reward APY\"}},\"setRewardToken(address)\":{\"details\":\"Set the reward token \",\"params\":{\"_token\":\"The address of the new reward token\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"HodlUpRewardsManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HodlUpRewardsManager.sol\":\"HodlUpRewardsManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/HodlUpRewardsManager.sol\":{\"keccak256\":\"0x077040b135549ab3c0dd8538eef9bcbba140fa7bc30589e16555c3d447832e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30e0d2a3e7663f589f9b729e6b7c765b7db632233915da2c94742d6822dfd9a6\",\"dweb:/ipfs/QmeDb7aLjsd9LTZEzToMNgiA4XtLLnKF3u5nDwVqSa5rY4\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ee1380380610ee183398101604081905261002f916100b1565b61003833610061565b600180546001600160a01b0319166001600160a01b0393909316929092179091556002556100eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100c457600080fd5b82516001600160a01b03811681146100db57600080fd5b6020939093015192949293505050565b610de7806100fa6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806378e368651161007157806378e36865146101205780638aee8127146101335780638da5cb5b14610146578063f2fde38b1461016b578063f7c618c11461017e578063ff52775d1461019157600080fd5b80630962ef79146100b95780630b83a727146100ce5780633b3f5e36146100d65780635f539d69146100e95780636cc6ba79146100fc578063715018a614610118575b600080fd5b6100cc6100c7366004610a76565b6101a4565b005b6100cc6102b3565b6100cc6100e4366004610a76565b6103ab565b6100cc6100f7366004610aa4565b6103b8565b61010560025481565b6040519081526020015b60405180910390f35b6100cc610414565b6100cc61012e366004610ac8565b610428565b6100cc610141366004610aa4565b6104c0565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161010f565b6100cc610179366004610aa4565b6104ea565b600154610153906001600160a01b031681565b61010561019f366004610aa4565b610563565b336000908152600360205260408120546101bf908390610b1f565b116102115760405162461bcd60e51b815260206004820152601c60248201527f4e6f2073756666696369656e742066756e647320746f20636c61696d0000000060448201526064015b60405180910390fd5b3360009081526003602052604081208054839290610230908490610b1f565b909155505060015461024c906001600160a01b0316338361063d565b600154336000818152600360209081526040918290205482516001600160a01b039095168552908401929092528201524260608201527fd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2906080015b60405180910390a150565b3360009081526003602052604090205461030f5760405162461bcd60e51b815260206004820152601c60248201527f4e6f2073756666696369656e742066756e647320746f20636c61696d000000006044820152606401610208565b60015433600081815260036020526040902054610336926001600160a01b0316919061063d565b600154336000818152600360209081526040918290205482516001600160a01b039095168552908401929092528201524260608201527fd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f29060800160405180910390a133600090815260036020526040812055565b6103b3610694565b600255565b6103c0610694565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600117905590519182527f89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e20591016102a8565b61041c610694565b61042660006106ee565b565b3360009081526005602052604090205460ff1615156001146104845760405162461bcd60e51b81526020600482015260156024820152741058d8d95cdcc81b9bdd08185d5d1a1bdc9a5e9959605a1b6044820152606401610208565b61048e828261073e565b6001600160a01b038416600090815260036020526040812080549091906104b6908490610b32565b9091555050505050565b6104c8610694565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6104f2610694565b6001600160a01b0381166105575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610208565b610560816106ee565b50565b6001600160a01b038082166000908152600460208190526040808320548151633fabe5a360e21b815291519394859491169263feaf968c928082019260a09290918290030181865afa1580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190610b64565b505050915050600081136106375760405162461bcd60e51b815260206004820152601960248201527f546f6b656e50726963653a20707269636520696e76616c6964000000000000006044820152606401610208565b92915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261068f908490610881565b505050565b6000546001600160a01b031633146104265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610208565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03808316600090815260046020818152604080842054815163313ce56760e01b815291519495869591169363313ce5679383820193909291908290030181865afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190610bb4565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190610bb4565b6108279190610bd7565b61083290600a610cd4565b61083b85610563565b6108459085610ce3565b61084f9190610cfa565b905061016d612710600254836108659190610ce3565b61086f9190610cfa565b6108799190610cfa565b949350505050565b60006108d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109539092919063ffffffff16565b80519091501561068f57808060200190518101906108f49190610d1c565b61068f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610208565b6060610879848460008585600080866001600160a01b0316858760405161097a9190610d62565b60006040518083038185875af1925050503d80600081146109b7576040519150601f19603f3d011682016040523d82523d6000602084013e6109bc565b606091505b50915091506109cd878383876109d8565b979650505050505050565b60608315610a47578251600003610a40576001600160a01b0385163b610a405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610208565b5081610879565b6108798383815115610a5c5781518083602001fd5b8060405162461bcd60e51b81526004016102089190610d7e565b600060208284031215610a8857600080fd5b5035919050565b6001600160a01b038116811461056057600080fd5b600060208284031215610ab657600080fd5b8135610ac181610a8f565b9392505050565b600080600060608486031215610add57600080fd5b8335610ae881610a8f565b92506020840135610af881610a8f565b929592945050506040919091013590565b634e487b7160e01b600052601160045260246000fd5b8181038181111561063757610637610b09565b8082018082111561063757610637610b09565b805169ffffffffffffffffffff81168114610b5f57600080fd5b919050565b600080600080600060a08688031215610b7c57600080fd5b610b8586610b45565b9450602086015193506040860151925060608601519150610ba860808701610b45565b90509295509295909350565b600060208284031215610bc657600080fd5b815160ff81168114610ac157600080fd5b60ff828116828216039081111561063757610637610b09565b600181815b80851115610c2b578160001904821115610c1157610c11610b09565b80851615610c1e57918102915b93841c9390800290610bf5565b509250929050565b600082610c4257506001610637565b81610c4f57506000610637565b8160018114610c655760028114610c6f57610c8b565b6001915050610637565b60ff841115610c8057610c80610b09565b50506001821b610637565b5060208310610133831016604e8410600b8410161715610cae575081810a610637565b610cb88383610bf0565b8060001904821115610ccc57610ccc610b09565b029392505050565b6000610ac160ff841683610c33565b808202811582820484141761063757610637610b09565b600082610d1757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610d2e57600080fd5b81518015158114610ac157600080fd5b60005b83811015610d59578181015183820152602001610d41565b50506000910152565b60008251610d74818460208701610d3e565b9190910192915050565b6020815260008251806020840152610d9d816040850160208701610d3e565b601f01601f1916919091016040019291505056fea2646970667358221220369db06dadb5a86e78b1251f91e2b5c35ad337ba69496654a0526584f634705d64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806378e368651161007157806378e36865146101205780638aee8127146101335780638da5cb5b14610146578063f2fde38b1461016b578063f7c618c11461017e578063ff52775d1461019157600080fd5b80630962ef79146100b95780630b83a727146100ce5780633b3f5e36146100d65780635f539d69146100e95780636cc6ba79146100fc578063715018a614610118575b600080fd5b6100cc6100c7366004610a76565b6101a4565b005b6100cc6102b3565b6100cc6100e4366004610a76565b6103ab565b6100cc6100f7366004610aa4565b6103b8565b61010560025481565b6040519081526020015b60405180910390f35b6100cc610414565b6100cc61012e366004610ac8565b610428565b6100cc610141366004610aa4565b6104c0565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161010f565b6100cc610179366004610aa4565b6104ea565b600154610153906001600160a01b031681565b61010561019f366004610aa4565b610563565b336000908152600360205260408120546101bf908390610b1f565b116102115760405162461bcd60e51b815260206004820152601c60248201527f4e6f2073756666696369656e742066756e647320746f20636c61696d0000000060448201526064015b60405180910390fd5b3360009081526003602052604081208054839290610230908490610b1f565b909155505060015461024c906001600160a01b0316338361063d565b600154336000818152600360209081526040918290205482516001600160a01b039095168552908401929092528201524260608201527fd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2906080015b60405180910390a150565b3360009081526003602052604090205461030f5760405162461bcd60e51b815260206004820152601c60248201527f4e6f2073756666696369656e742066756e647320746f20636c61696d000000006044820152606401610208565b60015433600081815260036020526040902054610336926001600160a01b0316919061063d565b600154336000818152600360209081526040918290205482516001600160a01b039095168552908401929092528201524260608201527fd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f29060800160405180910390a133600090815260036020526040812055565b6103b3610694565b600255565b6103c0610694565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600117905590519182527f89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e20591016102a8565b61041c610694565b61042660006106ee565b565b3360009081526005602052604090205460ff1615156001146104845760405162461bcd60e51b81526020600482015260156024820152741058d8d95cdcc81b9bdd08185d5d1a1bdc9a5e9959605a1b6044820152606401610208565b61048e828261073e565b6001600160a01b038416600090815260036020526040812080549091906104b6908490610b32565b9091555050505050565b6104c8610694565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6104f2610694565b6001600160a01b0381166105575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610208565b610560816106ee565b50565b6001600160a01b038082166000908152600460208190526040808320548151633fabe5a360e21b815291519394859491169263feaf968c928082019260a09290918290030181865afa1580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190610b64565b505050915050600081136106375760405162461bcd60e51b815260206004820152601960248201527f546f6b656e50726963653a20707269636520696e76616c6964000000000000006044820152606401610208565b92915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261068f908490610881565b505050565b6000546001600160a01b031633146104265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610208565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03808316600090815260046020818152604080842054815163313ce56760e01b815291519495869591169363313ce5679383820193909291908290030181865afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190610bb4565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190610bb4565b6108279190610bd7565b61083290600a610cd4565b61083b85610563565b6108459085610ce3565b61084f9190610cfa565b905061016d612710600254836108659190610ce3565b61086f9190610cfa565b6108799190610cfa565b949350505050565b60006108d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109539092919063ffffffff16565b80519091501561068f57808060200190518101906108f49190610d1c565b61068f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610208565b6060610879848460008585600080866001600160a01b0316858760405161097a9190610d62565b60006040518083038185875af1925050503d80600081146109b7576040519150601f19603f3d011682016040523d82523d6000602084013e6109bc565b606091505b50915091506109cd878383876109d8565b979650505050505050565b60608315610a47578251600003610a40576001600160a01b0385163b610a405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610208565b5081610879565b6108798383815115610a5c5781518083602001fd5b8060405162461bcd60e51b81526004016102089190610d7e565b600060208284031215610a8857600080fd5b5035919050565b6001600160a01b038116811461056057600080fd5b600060208284031215610ab657600080fd5b8135610ac181610a8f565b9392505050565b600080600060608486031215610add57600080fd5b8335610ae881610a8f565b92506020840135610af881610a8f565b929592945050506040919091013590565b634e487b7160e01b600052601160045260246000fd5b8181038181111561063757610637610b09565b8082018082111561063757610637610b09565b805169ffffffffffffffffffff81168114610b5f57600080fd5b919050565b600080600080600060a08688031215610b7c57600080fd5b610b8586610b45565b9450602086015193506040860151925060608601519150610ba860808701610b45565b90509295509295909350565b600060208284031215610bc657600080fd5b815160ff81168114610ac157600080fd5b60ff828116828216039081111561063757610637610b09565b600181815b80851115610c2b578160001904821115610c1157610c11610b09565b80851615610c1e57918102915b93841c9390800290610bf5565b509250929050565b600082610c4257506001610637565b81610c4f57506000610637565b8160018114610c655760028114610c6f57610c8b565b6001915050610637565b60ff841115610c8057610c80610b09565b50506001821b610637565b5060208310610133831016604e8410600b8410161715610cae575081810a610637565b610cb88383610bf0565b8060001904821115610ccc57610ccc610b09565b029392505050565b6000610ac160ff841683610c33565b808202811582820484141761063757610637610b09565b600082610d1757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610d2e57600080fd5b81518015158114610ac157600080fd5b60005b83811015610d59578181015183820152602001610d41565b50506000910152565b60008251610d74818460208701610d3e565b9190910192915050565b6020815260008251806020840152610d9d816040850160208701610d3e565b601f01601f1916919091016040019291505056fea2646970667358221220369db06dadb5a86e78b1251f91e2b5c35ad337ba69496654a0526584f634705d64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:367:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "112:253:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "133:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "142:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "129:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "129:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "154:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "122:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "183:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "202:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "196:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "187:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "275:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "277:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "277:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "234:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "245:5:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "260:3:16",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "265:1:16",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "256:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "256:11:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "269:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:19:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "241:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "241:31:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "231:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "224:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:50:16"
                  },
                  "nodeType": "YulIf",
                  "src": "221:70:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "300:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "310:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "324:35:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "355:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "334:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "334:25:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "324:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:16",
                "type": ""
              }
            ],
            "src": "14:351:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9920:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:16",
                "type": ""
              }
            ],
            "src": "14:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "244:86:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "267:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "278:5:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "293:3:16",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "298:1:16",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "289:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "289:11:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "302:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "285:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "285:19:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "274:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "274:31:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "264:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "264:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "257:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "257:50:16"
                  },
                  "nodeType": "YulIf",
                  "src": "254:70:16"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "233:5:16",
                "type": ""
              }
            ],
            "src": "199:131:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "405:177:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "451:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "460:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "463:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "453:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "453:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "453:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "426:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "435:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "422:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "422:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "447:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "415:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "476:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "502:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "489:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "480:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "546:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "521:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "571:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "371:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "382:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "394:6:16",
                "type": ""
              }
            ],
            "src": "335:247:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "688:76:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "698:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "710:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "721:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "706:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "706:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "698:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "740:9:16"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "751:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "733:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:25:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "733:25:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "657:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "668:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "679:4:16",
                "type": ""
              }
            ],
            "src": "587:177:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "887:352:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "933:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "942:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "945:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "935:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "935:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "935:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "908:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "917:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "904:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "904:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "929:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "900:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "900:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "897:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "958:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "984:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "971:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "962:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1028:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1003:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1003:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1003:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1043:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1053:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1043:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1067:47:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1099:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1110:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1082:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1082:32:16"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1071:7:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1148:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1123:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1123:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1165:17:16",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1175:7:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1165:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1218:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1229:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1214:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1214:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1201:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_ERC20_$3076t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "837:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "848:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "860:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "868:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "876:6:16",
                "type": ""
              }
            ],
            "src": "769:470:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1345:102:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1355:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1367:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1378:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1363:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1363:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1355:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1397:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1412:6:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1428:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1433:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1424:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1424:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1437:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1420:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1420:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1408:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1408:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1390:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1390:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1390:51:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1314:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1325:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1336:4:16",
                "type": ""
              }
            ],
            "src": "1244:203:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:102:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1577:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1589:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1600:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1585:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1577:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1619:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1634:6:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1650:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1655:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1646:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1646:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1659:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1642:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1642:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1630:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1630:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1612:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1612:51:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$3076__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1536:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1547:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1558:4:16",
                "type": ""
              }
            ],
            "src": "1452:217:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1706:95:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1723:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1730:3:16",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1735:10:16",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1726:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1716:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1716:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1716:31:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1763:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1766:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1756:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1756:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1756:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1787:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1790:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1780:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1780:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1780:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1674:127:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1855:79:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:17:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1877:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1880:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "1865:4:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1906:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1908:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1908:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1908:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "1897:4:16"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1903:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1894:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:11:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1891:37:16"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1837:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1840:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "1846:4:16",
                "type": ""
              }
            ],
            "src": "1806:128:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2113:178:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2130:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2141:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2123:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2123:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2123:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2164:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2175:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2160:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2180:2:16",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2153:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2153:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2203:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2214:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2199:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2199:18:16"
                      },
                      {
                        "hexValue": "4e6f2073756666696369656e742066756e647320746f20636c61696d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2219:30:16",
                        "type": "",
                        "value": "No sufficient funds to claim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2192:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2192:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2192:58:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2259:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2271:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2282:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2267:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2267:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2259:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2090:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2104:4:16",
                "type": ""
              }
            ],
            "src": "1939:352:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2495:262:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2505:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2517:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2528:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2513:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2513:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2505:4:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2541:29:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2559:3:16",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2564:1:16",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2555:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2555:11:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2568:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2551:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2551:19:16"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2545:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2586:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2601:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2609:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2597:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2597:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2579:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2579:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2579:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2633:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2644:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2629:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2629:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2653:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2661:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2649:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2649:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2622:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2622:43:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2622:43:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2685:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2696:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2681:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2681:18:16"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2701:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2674:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2674:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2674:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2728:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2739:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2724:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2724:18:16"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2744:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2717:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2717:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2717:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$3076_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2440:9:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2451:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2459:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2467:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2475:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2486:4:16",
                "type": ""
              }
            ],
            "src": "2296:461:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2936:171:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2953:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2964:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2946:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2946:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2946:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2987:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2998:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2983:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2983:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3003:2:16",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2976:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2976:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2976:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3026:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3037:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3022:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3022:18:16"
                      },
                      {
                        "hexValue": "416363657373206e6f7420617574686f72697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3042:23:16",
                        "type": "",
                        "value": "Access not authorized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3015:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3015:51:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3075:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3087:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3098:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3083:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3075:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2913:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2927:4:16",
                "type": ""
              }
            ],
            "src": "2762:345:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3160:77:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3170:16:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3181:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3184:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3177:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3177:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3170:3:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3209:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3211:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3211:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3211:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3201:1:16"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "3204:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3198:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3198:10:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3195:36:16"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3143:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3146:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3152:3:16",
                "type": ""
              }
            ],
            "src": "3112:125:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3416:228:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3433:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3444:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3426:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3426:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3426:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3467:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3478:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3463:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3463:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3483:2:16",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3456:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3456:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3456:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3506:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3517:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3502:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3502:18:16"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3522:34:16",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3495:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3495:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3495:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3577:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3588:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3573:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3573:18:16"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3593:8:16",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3566:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3566:36:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3566:36:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3611:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3623:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3634:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3619:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3619:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3611:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3393:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3407:4:16",
                "type": ""
              }
            ],
            "src": "3242:402:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3708:120:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3718:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3733:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3727:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3727:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3718:5:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3806:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3815:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3818:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3808:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3808:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3808:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3762:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3773:5:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3780:22:16",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3769:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3769:34:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3759:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3759:45:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3752:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3752:53:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3749:73:16"
                }
              ]
            },
            "name": "abi_decode_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3687:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3698:5:16",
                "type": ""
              }
            ],
            "src": "3649:179:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3979:327:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4026:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4035:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4038:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4028:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4028:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4028:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4000:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4009:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3996:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3996:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4021:3:16",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3992:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3992:33:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3989:53:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4051:49:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4090:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "4061:28:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4061:39:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4051:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4109:35:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4129:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4140:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4125:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4125:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4119:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4119:25:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4109:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4153:35:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4173:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4184:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4169:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4169:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4163:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4163:25:16"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4153:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4197:35:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4217:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4228:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4213:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4213:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4207:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4207:25:16"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4197:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4241:59:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4284:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4295:3:16",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4280:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4280:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "4251:28:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4251:49:16"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4241:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3913:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3924:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3936:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3944:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3952:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3960:6:16",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3968:6:16",
                "type": ""
              }
            ],
            "src": "3833:473:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4485:175:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4502:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4513:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4495:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4495:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4495:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4536:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4547:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4532:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4532:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4552:2:16",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4525:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4525:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4525:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4575:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4586:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4571:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4571:18:16"
                      },
                      {
                        "hexValue": "546f6b656e50726963653a20707269636520696e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4591:27:16",
                        "type": "",
                        "value": "TokenPrice: price invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4564:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4564:55:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4564:55:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4628:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4640:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4651:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4636:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4636:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4628:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4462:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4476:4:16",
                "type": ""
              }
            ],
            "src": "4311:349:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4794:145:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4804:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4816:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4827:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4812:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4812:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4804:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4846:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4861:6:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4877:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4882:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4873:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4873:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4886:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4869:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4869:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4857:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4857:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4839:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4839:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4839:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4910:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4921:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4906:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4906:18:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4926:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4899:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4899:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4899:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4755:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4766:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4774:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4785:4:16",
                "type": ""
              }
            ],
            "src": "4665:274:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5118:182:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5135:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5146:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5128:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5128:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5128:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5169:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5180:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5165:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5165:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5185:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5158:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5158:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5158:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5208:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5219:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5204:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5204:18:16"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5224:34:16",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5197:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5197:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5197:62:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5268:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5280:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5291:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5276:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5276:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5268:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5095:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5109:4:16",
                "type": ""
              }
            ],
            "src": "4944:356:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5384:194:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5430:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5439:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5442:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5432:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5432:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5432:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5405:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5414:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5401:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5401:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5426:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5397:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "5394:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5455:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5474:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5468:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5468:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5459:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5532:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5541:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5544:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5534:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5534:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5534:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5506:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5517:5:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5524:4:16",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5513:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5513:16:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5503:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:27:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5496:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5496:35:16"
                  },
                  "nodeType": "YulIf",
                  "src": "5493:55:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5557:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5567:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5557:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5350:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5361:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5373:6:16",
                "type": ""
              }
            ],
            "src": "5305:273:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5630:104:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5640:39:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5656:1:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5659:4:16",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5652:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5652:12:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5670:1:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5673:4:16",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5666:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5666:12:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5648:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5648:31:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5640:4:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5706:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5708:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5708:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5708:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "5694:4:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5700:4:16",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5691:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5691:14:16"
                  },
                  "nodeType": "YulIf",
                  "src": "5688:40:16"
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5612:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5615:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5621:4:16",
                "type": ""
              }
            ],
            "src": "5583:151:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5803:358:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5813:16:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5828:1:16",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "5817:7:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5838:16:16",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "5847:7:16"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "5838:5:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5863:13:16",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "5871:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "5863:4:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5927:228:16",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5972:22:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5974:16:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5974:18:16"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5974:18:16"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "5947:4:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5961:1:16",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "5957:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5957:6:16"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "5965:4:16"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "5953:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5953:17:16"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "5944:2:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5944:27:16"
                        },
                        "nodeType": "YulIf",
                        "src": "5941:53:16"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6033:29:16",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6035:25:16",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "6048:5:16"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "6055:4:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6044:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6044:16:16"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "6035:5:16"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6014:8:16"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "6024:7:16"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6010:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6010:22:16"
                        },
                        "nodeType": "YulIf",
                        "src": "6007:55:16"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6075:23:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6087:4:16"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6093:4:16"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "6083:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6083:15:16"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "6075:4:16"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6111:34:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "6127:7:16"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6136:8:16"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "6123:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6123:22:16"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "6111:8:16"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "5896:8:16"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "5906:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5893:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5893:21:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5915:3:16",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5889:3:16",
                    "statements": []
                  },
                  "src": "5885:270:16"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "5767:5:16",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "5774:8:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "5787:5:16",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "5794:4:16",
                "type": ""
              }
            ],
            "src": "5739:422:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6225:747:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6263:52:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6277:10:16",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6286:1:16",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6277:5:16"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6300:5:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6245:8:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6238:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6238:16:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6235:80:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6348:52:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6362:10:16",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6371:1:16",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6362:5:16"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6385:5:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6334:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6327:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6327:12:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6324:76:16"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6436:52:16",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6450:10:16",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6459:1:16",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "6450:5:16"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "6473:5:16"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "6429:59:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6434:1:16",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6504:123:16",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6539:22:16",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6541:16:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6541:18:16"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6541:18:16"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "6524:8:16"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6534:3:16",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "6521:2:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6521:17:16"
                            },
                            "nodeType": "YulIf",
                            "src": "6518:43:16"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "6574:25:16",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "6587:8:16"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6597:1:16",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6583:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6583:16:16"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "6574:5:16"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "6612:5:16"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "6497:130:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6502:1:16",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "6416:4:16"
                  },
                  "nodeType": "YulSwitch",
                  "src": "6409:218:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6725:70:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6739:28:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6752:4:16"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6758:8:16"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "6748:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6748:19:16"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6739:5:16"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6780:5:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "6649:4:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6655:2:16",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6646:2:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6646:12:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "6663:8:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6673:2:16",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6660:2:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6660:16:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6642:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6642:35:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "6686:4:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6692:3:16",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6683:2:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6683:13:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "6701:8:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6711:2:16",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6698:2:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6698:16:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6679:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6679:36:16"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6639:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6639:77:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6636:159:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6804:57:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6846:4:16"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6852:8:16"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "6827:18:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6827:34:16"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "6808:7:16",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "6817:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6906:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6908:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6908:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6908:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "6876:7:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6893:1:16",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "6889:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6889:6:16"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "6897:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "6885:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6885:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6873:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6873:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6870:58:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6937:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "6950:7:16"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "6959:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6946:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6946:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "6937:5:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "6196:4:16",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "6202:8:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "6215:5:16",
                "type": ""
              }
            ],
            "src": "6166:806:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7045:72:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7055:56:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "7085:4:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "7095:8:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7105:4:16",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7091:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7091:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "7064:20:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7064:47:16"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "7055:5:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "7016:4:16",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "7022:8:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "7035:5:16",
                "type": ""
              }
            ],
            "src": "6977:140:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7174:116:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7184:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7199:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7202:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7195:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7195:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7184:7:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7262:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7264:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7264:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7264:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7233:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7226:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7226:9:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7240:1:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "7247:7:16"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7256:1:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "7243:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7243:15:16"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "7237:2:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7237:22:16"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "7223:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7223:37:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7216:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7216:45:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7213:71:16"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7153:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7156:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7162:7:16",
                "type": ""
              }
            ],
            "src": "7122:168:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7341:171:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7372:111:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7393:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7400:3:16",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7405:10:16",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7396:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7396:20:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7386:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7386:31:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7386:31:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7437:1:16",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7440:4:16",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7430:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7430:15:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7430:15:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7465:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7468:4:16",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7458:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7458:15:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7458:15:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7361:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7354:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7354:9:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7351:132:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7492:14:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7501:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7504:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7497:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7497:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7492:1:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7326:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7329:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7335:1:16",
                "type": ""
              }
            ],
            "src": "7295:217:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7595:199:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7641:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7650:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7653:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7643:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7643:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7643:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7616:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7625:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7612:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7612:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7637:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7608:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7608:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7605:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7666:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7685:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7679:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7679:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7670:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7748:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7757:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7760:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7750:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7750:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7750:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7717:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7738:5:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7731:6:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7731:13:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7724:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7724:21:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7714:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7714:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7707:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7707:40:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7704:60:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7773:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7783:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7773:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7561:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7572:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7584:6:16",
                "type": ""
              }
            ],
            "src": "7517:277:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7973:232:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7990:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8001:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7983:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7983:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7983:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8024:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8035:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8020:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8020:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8040:2:16",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8013:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8013:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8013:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8063:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8074:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8059:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8059:18:16"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8079:34:16",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8052:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8052:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8052:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8134:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8145:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8130:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8130:18:16"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8150:12:16",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8123:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8123:40:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8123:40:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8172:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8184:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8195:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8180:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8180:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8172:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7950:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7964:4:16",
                "type": ""
              }
            ],
            "src": "7799:406:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8384:228:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8401:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8412:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8394:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8394:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8394:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8435:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8446:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8431:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8431:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8451:2:16",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8424:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8424:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8424:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8474:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8485:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8470:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8470:18:16"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8490:34:16",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8463:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8463:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8463:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8545:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8556:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8541:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8541:18:16"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8561:8:16",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8534:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8534:36:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8534:36:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8579:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8591:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8602:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8587:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8587:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8579:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8361:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8375:4:16",
                "type": ""
              }
            ],
            "src": "8210:402:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8683:184:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8693:10:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8702:1:16",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8697:1:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8762:63:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8787:3:16"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8792:1:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8783:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8783:11:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8806:3:16"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8811:1:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8802:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8802:11:16"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8796:5:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8796:18:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8776:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8776:39:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8776:39:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8723:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8726:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8720:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8720:13:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8734:19:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8736:15:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8745:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8748:2:16",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8741:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8741:10:16"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8736:1:16"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8716:3:16",
                    "statements": []
                  },
                  "src": "8712:113:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "8845:3:16"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8850:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8841:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8841:16:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8859:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8834:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8834:27:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8834:27:16"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8661:3:16",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8666:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8671:6:16",
                "type": ""
              }
            ],
            "src": "8617:250:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9009:150:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9019:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9039:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9033:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9033:13:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9023:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9094:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9102:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9090:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9090:17:16"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9109:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9114:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "9055:34:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9055:66:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9055:66:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9130:23:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9141:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9146:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9137:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9137:16:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9130:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8985:3:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8990:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9001:3:16",
                "type": ""
              }
            ],
            "src": "8872:287:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9338:179:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9355:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9366:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9348:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9348:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9348:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9389:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9400:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9385:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9385:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9405:2:16",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9378:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9378:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9378:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9428:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9439:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9424:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9424:18:16"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9444:31:16",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9417:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9417:59:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9417:59:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9485:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9497:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9508:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9493:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9493:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9485:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9315:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9329:4:16",
                "type": ""
              }
            ],
            "src": "9164:353:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9643:275:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9660:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9671:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9653:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9653:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9653:21:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9683:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9703:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9697:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9697:13:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9687:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9730:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9741:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9726:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9726:18:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9746:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9719:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9719:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9719:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9801:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9809:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9797:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9797:15:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9818:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9829:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9814:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9814:18:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9834:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "9762:34:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9762:79:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9762:79:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9850:62:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9866:9:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9885:6:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9893:2:16",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9881:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9881:15:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9902:2:16",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9898:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9898:7:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9877:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9877:29:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9862:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9862:45:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9909:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9858:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9858:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9850:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9612:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9623:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9634:4:16",
                "type": ""
              }
            ],
            "src": "9522:396:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_contract$_ERC20_$3076t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$3076__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"No sufficient funds to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$3076_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Access not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"TokenPrice: price invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "580:4900:1:-:0;;;1069:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;719:10:11;936:18:4;:32::i;:::-;1137:11:1;:40;;-1:-1:-1;;;;;;1137:40:1;-1:-1:-1;;;;;1137:40:1;;;;;;;;;;;1187:9;:22;580:4900;;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:351:16:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:16;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:16:o;:::-;580:4900:1;;;;;;",
  "deployedSourceMap": "580:4900:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4079:342;;;;;;:::i;:::-;;:::i;:::-;;4603:331;;;:::i;2235:79::-;;;;;;:::i;:::-;;:::i;3063:152::-;;;;;;:::i;:::-;;:::i;709:21::-;;;;;;;;;733:25:16;;;721:2;706:18;709:21:1;;;;;;;;1831:101:4;;;:::i;3589:237:1:-;;;;;;:::i;:::-;;:::i;2041:103::-;;;;;;:::i;:::-;;:::i;1201:85:4:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;;;-1:-1:-1;;;;;1408:32:16;;;1390:51;;1378:2;1363:18;1201:85:4;1244:203:16;2081:198:4;;;;;;:::i;:::-;;:::i;679:24:1:-;;;;;-1:-1:-1;;;;;679:24:1;;;2541:298;;;;;;:::i;:::-;;:::i;4079:342::-;4152:10;4176:1;4143:20;;;:8;:20;;;;;;:30;;4166:7;;4143:30;:::i;:::-;:34;4134:77;;;;-1:-1:-1;;;4134:77:1;;2141:2:16;4134:77:1;;;2123:21:16;2180:2;2160:18;;;2153:30;2219;2199:18;;;2192:58;2267:18;;4134:77:1;;;;;;;;;4230:10;4221:20;;;;:8;:20;;;;;:32;;4246:7;;4221:20;:32;;4246:7;;4221:32;:::i;:::-;;;;-1:-1:-1;;4287:11:1;;4264:56;;-1:-1:-1;;;;;4287:11:1;4300:10;4312:7;4264:22;:56::i;:::-;4351:11;;4364:10;4351:11;4376:20;;;:8;:20;;;;;;;;;;4335:79;;-1:-1:-1;;;;;4351:11:1;;;2579:34:16;;2629:18;;;2622:43;;;;2681:18;;2674:34;4398:15:1;2739:2:16;2724:18;;2717:34;4335:79:1;;2528:3:16;2513:19;4335:79:1;;;;;;;;4079:342;:::o;4603:331::-;4667:10;4681:1;4658:20;;;:8;:20;;;;;;4649:67;;;;-1:-1:-1;;;4649:67:1;;2141:2:16;4649:67:1;;;2123:21:16;2180:2;2160:18;;;2153:30;2219;2199:18;;;2192:58;2267:18;;4649:67:1;1939:352:16;4649:67:1;4749:11;;4762:10;4749:11;4774:20;;;:8;:20;;;;;;4726:69;;-1:-1:-1;;;;;4749:11:1;;4762:10;4726:22;:69::i;:::-;4826:11;;4839:10;4826:11;4851:20;;;:8;:20;;;;;;;;;;4810:79;;-1:-1:-1;;;;;4826:11:1;;;2579:34:16;;2629:18;;;2622:43;;;;2681:18;;2674:34;4873:15:1;2739:2:16;2724:18;;2717:34;4810:79:1;;2528:3:16;2513:19;4810:79:1;;;;;;;4908:10;4922:1;4899:20;;;:8;:20;;;;;:24;4603:331::o;2235:79::-;1094:13:4;:11;:13::i;:::-;2291:9:1::1;:16:::0;2235:79::o;3063:152::-;1094:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;3131:30:1;::::1;;::::0;;;:19:::1;:30;::::0;;;;;;;;:37;;-1:-1:-1;;3131:37:1::1;3164:4;3131:37;::::0;;3183:25;;1390:51:16;;;3183:25:1::1;::::0;1363:18:16;3183:25:1::1;1244:203:16::0;1831:101:4;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3589:237:1:-;3705:10;3685:31;;;;:19;:31;;;;;;;;:39;;:31;:39;3676:75;;;;-1:-1:-1;;;3676:75:1;;2964:2:16;3676:75:1;;;2946:21:16;3003:2;2983:18;;;2976:30;-1:-1:-1;;;3022:18:16;;;3015:51;3083:18;;3676:75:1;2762:345:16;3676:75:1;3780:39;3803:6;3811:7;3780:22;:39::i;:::-;-1:-1:-1;;;;;3761:15:1;;;;;;:8;:15;;;;;:58;;:15;;;:58;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3589:237:1:o;2041:103::-;1094:13:4;:11;:13::i;:::-;2110:11:1::1;:27:::0;;-1:-1:-1;;;;;;2110:27:1::1;-1:-1:-1::0;;;;;2110:27:1;;;::::1;::::0;;;::::1;::::0;;2041:103::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;3444:2:16;2161:73:4::1;::::0;::::1;3426:21:16::0;3483:2;3463:18;;;3456:30;3522:34;3502:18;;;3495:62;-1:-1:-1;;;3573:18:16;;;3566:36;3619:19;;2161:73:4::1;3242:402:16::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2541:298:1:-;-1:-1:-1;;;;;2674:15:1;;;2609:7;2674:15;;;:7;:15;;;;;;;;;2652:56;;-1:-1:-1;;;2652:56:1;;;;2609:7;;;;2674:15;;;2652:54;;:56;;;;;;;;;;;;;2674:15;2652:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2628:80;;;;;;2734:1;2726:5;:9;2718:47;;;;-1:-1:-1;;;2718:47:1;;4513:2:16;2718:47:1;;;4495:21:16;4552:2;4532:18;;;4525:30;4591:27;4571:18;;;4564:55;4636:18;;2718:47:1;4311:349:16;2718:47:1;2826:5;2541:298;-1:-1:-1;;2541:298:1:o;763:205:9:-;902:58;;;-1:-1:-1;;;;;4857:32:16;;902:58:9;;;4839:51:16;4906:18;;;;4899:34;;;902:58:9;;;;;;;;;;4812:18:16;;;;902:58:9;;;;;;;;-1:-1:-1;;;;;902:58:9;-1:-1:-1;;;902:58:9;;;875:86;;895:5;;875:19;:86::i;:::-;763:205;;;:::o;1359:130:4:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:11;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;5146:2:16;1414:68:4;;;5128:21:16;;;5165:18;;;5158:30;5224:34;5204:18;;;5197:62;5276:18;;1414:68:4;4944:356:16;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1584:344:1:-;-1:-1:-1;;;;;1821:24:1;;;1670:7;1821:24;;;:7;:24;;;;;;;;;1799:58;;-1:-1:-1;;;1799:58:1;;;;1670:7;;;;1821:24;;;1799:56;;:58;;;;1821:24;;1799:58;;;;;;;1821:24;1799:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1778:6;-1:-1:-1;;;;;1772:22:1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;1765:93;;:2;:93;:::i;:::-;1722:38;1752:6;1722:21;:38::i;:::-;1712:48;;:7;:48;:::i;:::-;1711:148;;;;:::i;:::-;1688:171;;1918:3;1909:5;1896:9;;1878:15;:27;;;;:::i;:::-;1877:37;;;;:::i;:::-;1876:45;;;;:::i;:::-;1869:52;1584:344;-1:-1:-1;;;;1584:344:1:o;3747:706:9:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:9;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:9;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:9;;8001:2:16;4351:85:9;;;7983:21:16;8040:2;8020:18;;;8013:30;8079:34;8059:18;;;8052:62;-1:-1:-1;;;8130:18:16;;;8123:40;8180:19;;4351:85:9;7799:406:16;3873:223:10;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:10;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:10:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:10;;;7908:60;;;;-1:-1:-1;;;7908:60:10;;9366:2:16;7908:60:10;;;9348:21:16;9405:2;9385:18;;;9378:30;9444:31;9424:18;;;9417:59;9493:18;;7908:60:10;9164:353:16;7908:60:10;-1:-1:-1;8003:10:10;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:10;;;;;;;;:::i;14:180:16:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:16;;14:180;-1:-1:-1;14:180:16:o;199:131::-;-1:-1:-1;;;;;274:31:16;;264:42;;254:70;;320:1;317;310:12;335:247;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;502:9;489:23;521:31;546:5;521:31;:::i;:::-;571:5;335:247;-1:-1:-1;;;335:247:16:o;769:470::-;860:6;868;876;929:2;917:9;908:7;904:23;900:32;897:52;;;945:1;942;935:12;897:52;984:9;971:23;1003:31;1028:5;1003:31;:::i;:::-;1053:5;-1:-1:-1;1110:2:16;1095:18;;1082:32;1123:33;1082:32;1123:33;:::i;:::-;769:470;;1175:7;;-1:-1:-1;;;1229:2:16;1214:18;;;;1201:32;;769:470::o;1674:127::-;1735:10;1730:3;1726:20;1723:1;1716:31;1766:4;1763:1;1756:15;1790:4;1787:1;1780:15;1806:128;1873:9;;;1894:11;;;1891:37;;;1908:18;;:::i;3112:125::-;3177:9;;;3198:10;;;3195:36;;;3211:18;;:::i;3649:179::-;3727:13;;3780:22;3769:34;;3759:45;;3749:73;;3818:1;3815;3808:12;3749:73;3649:179;;;:::o;3833:473::-;3936:6;3944;3952;3960;3968;4021:3;4009:9;4000:7;3996:23;3992:33;3989:53;;;4038:1;4035;4028:12;3989:53;4061:39;4090:9;4061:39;:::i;:::-;4051:49;;4140:2;4129:9;4125:18;4119:25;4109:35;;4184:2;4173:9;4169:18;4163:25;4153:35;;4228:2;4217:9;4213:18;4207:25;4197:35;;4251:49;4295:3;4284:9;4280:19;4251:49;:::i;:::-;4241:59;;3833:473;;;;;;;;:::o;5305:273::-;5373:6;5426:2;5414:9;5405:7;5401:23;5397:32;5394:52;;;5442:1;5439;5432:12;5394:52;5474:9;5468:16;5524:4;5517:5;5513:16;5506:5;5503:27;5493:55;;5544:1;5541;5534:12;5583:151;5673:4;5666:12;;;5652;;;5648:31;;5691:14;;5688:40;;;5708:18;;:::i;5739:422::-;5828:1;5871:5;5828:1;5885:270;5906:7;5896:8;5893:21;5885:270;;;5965:4;5961:1;5957:6;5953:17;5947:4;5944:27;5941:53;;;5974:18;;:::i;:::-;6024:7;6014:8;6010:22;6007:55;;;6044:16;;;;6007:55;6123:22;;;;6083:15;;;;5885:270;;;5889:3;5739:422;;;;;:::o;6166:806::-;6215:5;6245:8;6235:80;;-1:-1:-1;6286:1:16;6300:5;;6235:80;6334:4;6324:76;;-1:-1:-1;6371:1:16;6385:5;;6324:76;6416:4;6434:1;6429:59;;;;6502:1;6497:130;;;;6409:218;;6429:59;6459:1;6450:10;;6473:5;;;6497:130;6534:3;6524:8;6521:17;6518:43;;;6541:18;;:::i;:::-;-1:-1:-1;;6597:1:16;6583:16;;6612:5;;6409:218;;6711:2;6701:8;6698:16;6692:3;6686:4;6683:13;6679:36;6673:2;6663:8;6660:16;6655:2;6649:4;6646:12;6642:35;6639:77;6636:159;;;-1:-1:-1;6748:19:16;;;6780:5;;6636:159;6827:34;6852:8;6846:4;6827:34;:::i;:::-;6897:6;6893:1;6889:6;6885:19;6876:7;6873:32;6870:58;;;6908:18;;:::i;:::-;6946:20;;6166:806;-1:-1:-1;;;6166:806:16:o;6977:140::-;7035:5;7064:47;7105:4;7095:8;7091:19;7085:4;7064:47;:::i;7122:168::-;7195:9;;;7226;;7243:15;;;7237:22;;7223:37;7213:71;;7264:18;;:::i;7295:217::-;7335:1;7361;7351:132;;7405:10;7400:3;7396:20;7393:1;7386:31;7440:4;7437:1;7430:15;7468:4;7465:1;7458:15;7351:132;-1:-1:-1;7497:9:16;;7295:217::o;7517:277::-;7584:6;7637:2;7625:9;7616:7;7612:23;7608:32;7605:52;;;7653:1;7650;7643:12;7605:52;7685:9;7679:16;7738:5;7731:13;7724:21;7717:5;7714:32;7704:60;;7760:1;7757;7750:12;8617:250;8702:1;8712:113;8726:6;8723:1;8720:13;8712:113;;;8802:11;;;8796:18;8783:11;;;8776:39;8748:2;8741:10;8712:113;;;-1:-1:-1;;8859:1:16;8841:16;;8834:27;8617:250::o;8872:287::-;9001:3;9039:6;9033:13;9055:66;9114:6;9109:3;9102:4;9094:6;9090:17;9055:66;:::i;:::-;9137:16;;;;;8872:287;-1:-1:-1;;8872:287:16:o;9522:396::-;9671:2;9660:9;9653:21;9634:4;9703:6;9697:13;9746:6;9741:2;9730:9;9726:18;9719:34;9762:79;9834:6;9829:2;9818:9;9814:18;9809:2;9801:6;9797:15;9762:79;:::i;:::-;9902:2;9881:15;-1:-1:-1;;9877:29:16;9862:45;;;;9909:2;9858:54;;9522:396;-1:-1:-1;;9522:396:16:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport \"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nusing SafeERC20 for IERC20;\n\n/**\n * @title HodlUpRewardsManager\n * @dev This contract manages the distribution of rewards in the form of an ERC20 token (HODL) to users who hold specific ERC20 tokens.\n */\ncontract HodlUpRewardsManager is Ownable {\n\n    // 1 rewardToken (here HODL) is equal to 1 USD\n    ERC20 public rewardToken;\n    uint public rewardApy;\n    mapping(address => uint) balances;\n    mapping(address => address) oracles;\n    mapping(address => bool) authorizedContracts;\n\n    /**\n     * @dev Constructor function\n     * @param _rewardTokenAddress The address of the reward token (HODL)\n     * @param _rewardApy The annual percentage yield (APY) for the reward token\n     */\n    constructor(address _rewardTokenAddress, uint _rewardApy) {\n        rewardToken = ERC20(_rewardTokenAddress);\n        rewardApy = _rewardApy;\n    }\n\n    /**\n     * @dev Internal function to get the daily reward for a specific ERC20 token based on its USD price and the reward APY\n     * @param _token The ERC20 token for which to calculate the daily reward\n     * @param _amount The amount of the ERC20 token for which to calculate the daily reward\n     * @return The daily reward amount in HODL tokens\n     */\n    function _getDailyRewardWithAPY(ERC20 _token, uint256 _amount) internal view returns (uint256){\n        uint amountConverted = (_amount * getUSDPriceFromOracle(address(_token))) / (10 ** (ERC20(_token).decimals() - AggregatorV3Interface(oracles[address(_token)]).decimals()));\n        return ((amountConverted * rewardApy) / 10000) / 365;\n    }\n\n    /**\n     * @dev Set the reward token \n     * @param _token The address of the new reward token\n     */\n    function setRewardToken(address _token) external onlyOwner {\n        rewardToken = ERC20(_token);\n    }\n\n    /**\n     * @dev Set the reward APY\n     * @param _apy The new reward APY\n     */\n    function setApy(uint _apy) external onlyOwner {\n        rewardApy = _apy;\n    }    \n\n    /**\n     * @dev Get the USD price of an ERC20 token from its associated Chainlink oracle\n     * @param _token The ERC20 token for which to get the USD price\n     * @return The USD price of the ERC20 token\n     */\n    function getUSDPriceFromOracle(address _token) public view returns (uint256) {\n        (, int256 price, , ,) = AggregatorV3Interface(oracles[_token]).latestRoundData();\n        require(price > 0, \"TokenPrice: price invalid\");\n        // result is on 8 decimals \n        return uint256(price);\n    }\n\n    /**\n    * @dev Adds an authorized contract that is allowed to generate rewards for users.\n    * Only the contract owner can call this function.\n    * @param _contract The address of the authorized contract.\n    */\n    function addContract(address _contract) external onlyOwner{\n        authorizedContracts[_contract] = true;\n        emit ContractAdded (_contract);\n    }\n\n    /**\n    * @dev Generates rewards for a user based on the given amount of tokens and the current APY.\n    * Only authorized contracts can call this function.\n    * @param _user The address of the user to receive the rewards.\n    * @param _token The ERC20 token used to generate the rewards.\n    * @param _amount The amount of tokens to generate rewards for.\n    */\n    function generateRewards(address _user, ERC20 _token, uint _amount) external {\n        require (authorizedContracts[msg.sender] == true, \"Access not authorized\" );\n        balances[_user] += _getDailyRewardWithAPY(_token, _amount);\n    }\n\n    /**\n    * @dev Allows a user to claim their rewards in the specified amount of tokens.\n    * The user must have a balance greater than or equal to the amount being claimed.\n    * @param _amount The amount of tokens to claim as rewards.\n    */\n    function claimRewards(uint _amount) external {\n        require (balances[msg.sender] - _amount > 0, \"No sufficient funds to claim\" );\n        balances[msg.sender] -=  _amount ;\n        SafeERC20.safeTransfer(rewardToken, msg.sender, _amount);\n        emit RewardsClaimed (rewardToken, msg.sender, balances[msg.sender], block.timestamp);\n    }   \n\n    /**\n    * @dev Allows a user to claim all of their available rewards in the reward token.\n    * The user must have a balance greater than 0 to claim any rewards.\n    */\n    function claimAllRewards() external {\n        require (balances[msg.sender] > 0, \"No sufficient funds to claim\" );\n        SafeERC20.safeTransfer(rewardToken, msg.sender, balances[msg.sender]);\n        emit RewardsClaimed (rewardToken, msg.sender, balances[msg.sender], block.timestamp);\n        balances[msg.sender] = 0 ;   \n    }   \n\n    /**\n    * @dev Emitted when a user claims rewards.\n    * @param token The ERC20 token that was claimed.\n    * @param user The user who claimed the rewards.\n    * @param amount The amount of tokens claimed.\n    * @param date The timestamp of the claim.\n    */\n    event RewardsClaimed (IERC20 token, address user, uint amount, uint date);\n    /**\n    * @dev Emitted when a new contract is added to the system.\n    * @param contractAdded The address of the contract that was added.\n    */\n    event ContractAdded (address contractAdded);\n}\n\n",
  "sourcePath": "/home/sjouany/ProjetFinal/HodlUp/truffle/contracts/HodlUpRewardsManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/HodlUpRewardsManager.sol",
    "exportedSymbols": {
      "Address": [
        3826
      ],
      "AggregatorV3Interface": [
        2376
      ],
      "Context": [
        3848
      ],
      "ERC20": [
        3076
      ],
      "HodlUpRewardsManager": [
        2303
      ],
      "IERC20": [
        3154
      ],
      "IERC20Metadata": [
        3179
      ],
      "IERC20Permit": [
        3215
      ],
      "Ownable": [
        2489
      ],
      "SafeERC20": [
        3496
      ]
    },
    "id": 2304,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1981,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:1"
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 1982,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 2377,
        "src": "59:92:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 1983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 2490,
        "src": "152:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 3077,
        "src": "221:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 3497,
        "src": "293:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "global": false,
        "id": 1989,
        "libraryName": {
          "id": 1986,
          "name": "SafeERC20",
          "nameLocations": [
            "382:9:1"
          ],
          "nodeType": "IdentifierPath",
          "referencedDeclaration": 3496,
          "src": "382:9:1"
        },
        "nodeType": "UsingForDirective",
        "src": "376:27:1",
        "typeName": {
          "id": 1988,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 1987,
            "name": "IERC20",
            "nameLocations": [
              "396:6:1"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 3154,
            "src": "396:6:1"
          },
          "referencedDeclaration": 3154,
          "src": "396:6:1",
          "typeDescriptions": {
            "typeIdentifier": "t_contract$_IERC20_$3154",
            "typeString": "contract IERC20"
          }
        }
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1991,
              "name": "Ownable",
              "nameLocations": [
                "613:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2489,
              "src": "613:7:1"
            },
            "id": 1992,
            "nodeType": "InheritanceSpecifier",
            "src": "613:7:1"
          }
        ],
        "canonicalName": "HodlUpRewardsManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1990,
          "nodeType": "StructuredDocumentation",
          "src": "405:174:1",
          "text": " @title HodlUpRewardsManager\n @dev This contract manages the distribution of rewards in the form of an ERC20 token (HODL) to users who hold specific ERC20 tokens."
        },
        "fullyImplemented": true,
        "id": 2303,
        "linearizedBaseContracts": [
          2303,
          2489,
          3848
        ],
        "name": "HodlUpRewardsManager",
        "nameLocation": "589:20:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f7c618c1",
            "id": 1995,
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "692:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "679:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$3076",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 1994,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1993,
                "name": "ERC20",
                "nameLocations": [
                  "679:5:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3076,
                "src": "679:5:1"
              },
              "referencedDeclaration": 3076,
              "src": "679:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3076",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6cc6ba79",
            "id": 1997,
            "mutability": "mutable",
            "name": "rewardApy",
            "nameLocation": "721:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "709:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1996,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "709:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2001,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "761:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "736:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2000,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1998,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "744:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "736:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1999,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "755:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2005,
            "mutability": "mutable",
            "name": "oracles",
            "nameLocation": "803:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "775:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2004,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2002,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "783:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "775:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2003,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "794:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2009,
            "mutability": "mutable",
            "name": "authorizedContracts",
            "nameLocation": "841:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "816:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2008,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2006,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "824:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "816:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2007,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "835:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2027,
              "nodeType": "Block",
              "src": "1127:89:1",
              "statements": [
                {
                  "expression": {
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2017,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1995,
                      "src": "1137:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3076",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2019,
                          "name": "_rewardTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2012,
                          "src": "1157:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2018,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3076,
                        "src": "1151:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3076_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1151:26:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3076",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1137:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3076",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2022,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:40:1"
                },
                {
                  "expression": {
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2023,
                      "name": "rewardApy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1997,
                      "src": "1187:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2024,
                      "name": "_rewardApy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "1199:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1187:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2026,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:22:1"
                }
              ]
            },
            "documentation": {
              "id": 2010,
              "nodeType": "StructuredDocumentation",
              "src": "867:197:1",
              "text": " @dev Constructor function\n @param _rewardTokenAddress The address of the reward token (HODL)\n @param _rewardApy The annual percentage yield (APY) for the reward token"
            },
            "id": 2028,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2012,
                  "mutability": "mutable",
                  "name": "_rewardTokenAddress",
                  "nameLocation": "1089:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "1081:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "_rewardApy",
                  "nameLocation": "1115:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "1110:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1080:46:1"
            },
            "returnParameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1127:0:1"
            },
            "scope": 2303,
            "src": "1069:147:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "1678:250:1",
              "statements": [
                {
                  "assignments": [
                    2040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2040,
                      "mutability": "mutable",
                      "name": "amountConverted",
                      "nameLocation": "1693:15:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2082,
                      "src": "1688:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2039,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1688:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2071,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2041,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2034,
                            "src": "1712:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2045,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2032,
                                    "src": "1752:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$3076",
                                      "typeString": "contract ERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$3076",
                                      "typeString": "contract ERC20"
                                    }
                                  ],
                                  "id": 2044,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1744:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2043,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1744:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1744:15:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2042,
                              "name": "getUSDPriceFromOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "1722:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 2047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:38:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1712:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2049,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1711:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 2050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1765:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 2066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2052,
                                          "name": "_token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2032,
                                          "src": "1778:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20_$3076",
                                            "typeString": "contract ERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ERC20_$3076",
                                            "typeString": "contract ERC20"
                                          }
                                        ],
                                        "id": 2051,
                                        "name": "ERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3076,
                                        "src": "1772:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3076_$",
                                          "typeString": "type(contract ERC20)"
                                        }
                                      },
                                      "id": 2053,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1772:13:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$3076",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 2054,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1786:8:1",
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2564,
                                    "src": "1772:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 2055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1772:24:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2057,
                                            "name": "oracles",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2005,
                                            "src": "1821:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                              "typeString": "mapping(address => address)"
                                            }
                                          },
                                          "id": 2062,
                                          "indexExpression": {
                                            "arguments": [
                                              {
                                                "id": 2060,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2032,
                                                "src": "1837:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ERC20_$3076",
                                                  "typeString": "contract ERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ERC20_$3076",
                                                  "typeString": "contract ERC20"
                                                }
                                              ],
                                              "id": 2059,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1829:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2058,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1829:7:1",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2061,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1829:15:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1821:24:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2056,
                                        "name": "AggregatorV3Interface",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2376,
                                        "src": "1799:21:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2376_$",
                                          "typeString": "type(contract AggregatorV3Interface)"
                                        }
                                      },
                                      "id": 2063,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1799:47:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$2376",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "id": 2064,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1847:8:1",
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2337,
                                    "src": "1799:56:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 2065,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1799:58:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1772:85:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 2067,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1771:87:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1765:93:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2069,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1764:95:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1711:148:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1688:171:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2072,
                                  "name": "amountConverted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2040,
                                  "src": "1878:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2073,
                                  "name": "rewardApy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1997,
                                  "src": "1896:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1878:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2075,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1877:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 2076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1909:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1877:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2078,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1876:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "333635",
                      "id": 2079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1918:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_365_by_1",
                        "typeString": "int_const 365"
                      },
                      "value": "365"
                    },
                    "src": "1876:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2038,
                  "id": 2081,
                  "nodeType": "Return",
                  "src": "1869:52:1"
                }
              ]
            },
            "documentation": {
              "id": 2029,
              "nodeType": "StructuredDocumentation",
              "src": "1222:357:1",
              "text": " @dev Internal function to get the daily reward for a specific ERC20 token based on its USD price and the reward APY\n @param _token The ERC20 token for which to calculate the daily reward\n @param _amount The amount of the ERC20 token for which to calculate the daily reward\n @return The daily reward amount in HODL tokens"
            },
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getDailyRewardWithAPY",
            "nameLocation": "1593:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1622:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1616:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3076",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2031,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2030,
                      "name": "ERC20",
                      "nameLocations": [
                        "1616:5:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3076,
                      "src": "1616:5:1"
                    },
                    "referencedDeclaration": 3076,
                    "src": "1616:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3076",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2034,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1638:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1630:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1615:31:1"
            },
            "returnParameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1670:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1669:9:1"
            },
            "scope": 2303,
            "src": "1584:344:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2097,
              "nodeType": "Block",
              "src": "2100:44:1",
              "statements": [
                {
                  "expression": {
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2091,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1995,
                      "src": "2110:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3076",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2093,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2086,
                          "src": "2130:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2092,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3076,
                        "src": "2124:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3076_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2124:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3076",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2110:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3076",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "2110:27:1"
                }
              ]
            },
            "documentation": {
              "id": 2084,
              "nodeType": "StructuredDocumentation",
              "src": "1934:102:1",
              "text": " @dev Set the reward token \n @param _token The address of the new reward token"
            },
            "functionSelector": "8aee8127",
            "id": 2098,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2089,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2088,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2090:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2408,
                  "src": "2090:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2090:9:1"
              }
            ],
            "name": "setRewardToken",
            "nameLocation": "2050:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2073:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2098,
                  "src": "2065:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2064:16:1"
            },
            "returnParameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2100:0:1"
            },
            "scope": 2303,
            "src": "2041:103:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "2281:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2106,
                      "name": "rewardApy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1997,
                      "src": "2291:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2107,
                      "name": "_apy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2101,
                      "src": "2303:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2291:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "2291:16:1"
                }
              ]
            },
            "documentation": {
              "id": 2099,
              "nodeType": "StructuredDocumentation",
              "src": "2150:80:1",
              "text": " @dev Set the reward APY\n @param _apy The new reward APY"
            },
            "functionSelector": "3b3f5e36",
            "id": 2111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2103,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2271:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2408,
                  "src": "2271:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2271:9:1"
              }
            ],
            "name": "setApy",
            "nameLocation": "2244:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "2256:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "2251:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2250:11:1"
            },
            "returnParameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2281:0:1"
            },
            "scope": 2303,
            "src": "2235:79:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2141,
              "nodeType": "Block",
              "src": "2618:221:1",
              "statements": [
                {
                  "assignments": [
                    null,
                    2120,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 2120,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2638:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2141,
                      "src": "2631:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 2119,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2631:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 2128,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2122,
                              "name": "oracles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2005,
                              "src": "2674:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 2124,
                            "indexExpression": {
                              "id": 2123,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2114,
                              "src": "2682:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2674:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2121,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2376,
                          "src": "2652:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2376_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2652:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2376",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 2126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2691:15:1",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2375,
                      "src": "2652:54:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2652:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2628:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 2132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2130,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2120,
                          "src": "2726:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2734:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2726:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e50726963653a20707269636520696e76616c6964",
                        "id": 2133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2737:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2",
                          "typeString": "literal_string \"TokenPrice: price invalid\""
                        },
                        "value": "TokenPrice: price invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2",
                          "typeString": "literal_string \"TokenPrice: price invalid\""
                        }
                      ],
                      "id": 2129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2718:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2718:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2135,
                  "nodeType": "ExpressionStatement",
                  "src": "2718:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2138,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2120,
                        "src": "2826:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2818:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2136,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2818:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2818:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2118,
                  "id": 2140,
                  "nodeType": "Return",
                  "src": "2811:21:1"
                }
              ]
            },
            "documentation": {
              "id": 2112,
              "nodeType": "StructuredDocumentation",
              "src": "2324:212:1",
              "text": " @dev Get the USD price of an ERC20 token from its associated Chainlink oracle\n @param _token The ERC20 token for which to get the USD price\n @return The USD price of the ERC20 token"
            },
            "functionSelector": "ff52775d",
            "id": 2142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUSDPriceFromOracle",
            "nameLocation": "2550:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2580:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2142,
                  "src": "2572:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2572:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2571:16:1"
            },
            "returnParameters": {
              "id": 2118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2142,
                  "src": "2609:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2608:9:1"
            },
            "scope": 2303,
            "src": "2541:298:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2160,
              "nodeType": "Block",
              "src": "3121:94:1",
              "statements": [
                {
                  "expression": {
                    "id": 2154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2150,
                        "name": "authorizedContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "3131:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2152,
                      "indexExpression": {
                        "id": 2151,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "3151:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3131:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3164:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3131:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2155,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:37:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2157,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "3198:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2156,
                      "name": "ContractAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2302,
                      "src": "3183:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3183:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2159,
                  "nodeType": "EmitStatement",
                  "src": "3178:30:1"
                }
              ]
            },
            "documentation": {
              "id": 2143,
              "nodeType": "StructuredDocumentation",
              "src": "2845:213:1",
              "text": " @dev Adds an authorized contract that is allowed to generate rewards for users.\n Only the contract owner can call this function.\n @param _contract The address of the authorized contract."
            },
            "functionSelector": "5f539d69",
            "id": 2161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2147,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3112:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2408,
                  "src": "3112:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3112:9:1"
              }
            ],
            "name": "addContract",
            "nameLocation": "3072:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2145,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "3092:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2161,
                  "src": "3084:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3084:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3083:19:1"
            },
            "returnParameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3121:0:1"
            },
            "scope": 2303,
            "src": "3063:152:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2191,
              "nodeType": "Block",
              "src": "3666:160:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2173,
                            "name": "authorizedContracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2009,
                            "src": "3685:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2176,
                          "indexExpression": {
                            "expression": {
                              "id": 2174,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3705:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3709:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3705:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3685:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3720:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3685:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416363657373206e6f7420617574686f72697a6564",
                        "id": 2179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3726:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b",
                          "typeString": "literal_string \"Access not authorized\""
                        },
                        "value": "Access not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b",
                          "typeString": "literal_string \"Access not authorized\""
                        }
                      ],
                      "id": 2172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3676:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3676:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2181,
                  "nodeType": "ExpressionStatement",
                  "src": "3676:75:1"
                },
                {
                  "expression": {
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2182,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "3761:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2184,
                      "indexExpression": {
                        "id": 2183,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "3770:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3761:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2186,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2167,
                          "src": "3803:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3076",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 2187,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2169,
                          "src": "3811:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$3076",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2185,
                        "name": "_getDailyRewardWithAPY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2083,
                        "src": "3780:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$3076_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 2188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3780:39:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3761:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:58:1"
                }
              ]
            },
            "documentation": {
              "id": 2162,
              "nodeType": "StructuredDocumentation",
              "src": "3221:363:1",
              "text": " @dev Generates rewards for a user based on the given amount of tokens and the current APY.\n Only authorized contracts can call this function.\n @param _user The address of the user to receive the rewards.\n @param _token The ERC20 token used to generate the rewards.\n @param _amount The amount of tokens to generate rewards for."
            },
            "functionSelector": "78e36865",
            "id": 2192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateRewards",
            "nameLocation": "3598:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2164,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3622:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2192,
                  "src": "3614:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3614:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2167,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3635:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2192,
                  "src": "3629:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3076",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2166,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2165,
                      "name": "ERC20",
                      "nameLocations": [
                        "3629:5:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3076,
                      "src": "3629:5:1"
                    },
                    "referencedDeclaration": 3076,
                    "src": "3629:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3076",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2169,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3648:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2192,
                  "src": "3643:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2168,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3643:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3613:43:1"
            },
            "returnParameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3666:0:1"
            },
            "scope": 2303,
            "src": "3589:237:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2238,
              "nodeType": "Block",
              "src": "4124:297:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2199,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2001,
                              "src": "4143:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2202,
                            "indexExpression": {
                              "expression": {
                                "id": 2200,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4152:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4156:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4152:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4143:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2203,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2195,
                            "src": "4166:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4143:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4176:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4143:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073756666696369656e742066756e647320746f20636c61696d",
                        "id": 2207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4179:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045",
                          "typeString": "literal_string \"No sufficient funds to claim\""
                        },
                        "value": "No sufficient funds to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045",
                          "typeString": "literal_string \"No sufficient funds to claim\""
                        }
                      ],
                      "id": 2198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4134:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4134:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2209,
                  "nodeType": "ExpressionStatement",
                  "src": "4134:77:1"
                },
                {
                  "expression": {
                    "id": 2215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2210,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "4221:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2213,
                      "indexExpression": {
                        "expression": {
                          "id": 2211,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4230:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4234:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4230:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4221:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2214,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2195,
                      "src": "4246:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4221:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2216,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2220,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1995,
                        "src": "4287:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3076",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 2221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4300:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4304:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4300:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2223,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "4312:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3076",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2217,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3496,
                        "src": "4264:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$3496_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 2219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4274:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3247,
                      "src": "4264:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3154_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4264:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2225,
                  "nodeType": "ExpressionStatement",
                  "src": "4264:56:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2227,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1995,
                        "src": "4351:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3076",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 2228,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4364:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4368:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4364:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2230,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "4376:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2233,
                        "indexExpression": {
                          "expression": {
                            "id": 2231,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4385:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4389:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4385:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4376:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2234,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4398:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4404:9:1",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4398:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3076",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2226,
                      "name": "RewardsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2297,
                      "src": "4335:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$3154_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,uint256)"
                      }
                    },
                    "id": 2236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4335:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2237,
                  "nodeType": "EmitStatement",
                  "src": "4330:84:1"
                }
              ]
            },
            "documentation": {
              "id": 2193,
              "nodeType": "StructuredDocumentation",
              "src": "3832:242:1",
              "text": " @dev Allows a user to claim their rewards in the specified amount of tokens.\n The user must have a balance greater than or equal to the amount being claimed.\n @param _amount The amount of tokens to claim as rewards."
            },
            "functionSelector": "0962ef79",
            "id": 2239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "4088:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2195,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4106:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2239,
                  "src": "4101:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4101:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4100:14:1"
            },
            "returnParameters": {
              "id": 2197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4124:0:1"
            },
            "scope": 2303,
            "src": "4079:342:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2284,
              "nodeType": "Block",
              "src": "4639:295:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2244,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2001,
                            "src": "4658:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2247,
                          "indexExpression": {
                            "expression": {
                              "id": 2245,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4667:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4671:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4667:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4658:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4681:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4658:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073756666696369656e742066756e647320746f20636c61696d",
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4684:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045",
                          "typeString": "literal_string \"No sufficient funds to claim\""
                        },
                        "value": "No sufficient funds to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045",
                          "typeString": "literal_string \"No sufficient funds to claim\""
                        }
                      ],
                      "id": 2243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4649:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2252,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2256,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1995,
                        "src": "4749:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3076",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 2257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4762:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4766:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4762:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2259,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "4774:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2262,
                        "indexExpression": {
                          "expression": {
                            "id": 2260,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4783:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4787:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4783:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4774:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3076",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2253,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3496,
                        "src": "4726:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$3496_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 2255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4736:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3247,
                      "src": "4726:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3154_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2264,
                  "nodeType": "ExpressionStatement",
                  "src": "4726:69:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2266,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1995,
                        "src": "4826:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3076",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 2267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4839:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4843:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4839:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2269,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "4851:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2272,
                        "indexExpression": {
                          "expression": {
                            "id": 2270,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4860:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4864:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4860:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4851:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2273,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4873:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4879:9:1",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4873:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3076",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2265,
                      "name": "RewardsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2297,
                      "src": "4810:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$3154_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,uint256)"
                      }
                    },
                    "id": 2275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4810:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2276,
                  "nodeType": "EmitStatement",
                  "src": "4805:84:1"
                },
                {
                  "expression": {
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2277,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "4899:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2280,
                      "indexExpression": {
                        "expression": {
                          "id": 2278,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4908:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4912:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4908:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4899:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4922:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4899:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "4899:24:1"
                }
              ]
            },
            "documentation": {
              "id": 2240,
              "nodeType": "StructuredDocumentation",
              "src": "4430:168:1",
              "text": " @dev Allows a user to claim all of their available rewards in the reward token.\n The user must have a balance greater than 0 to claim any rewards."
            },
            "functionSelector": "0b83a727",
            "id": 2285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAllRewards",
            "nameLocation": "4612:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4627:2:1"
            },
            "returnParameters": {
              "id": 2242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4639:0:1"
            },
            "scope": 2303,
            "src": "4603:331:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2286,
              "nodeType": "StructuredDocumentation",
              "src": "4943:258:1",
              "text": " @dev Emitted when a user claims rewards.\n @param token The ERC20 token that was claimed.\n @param user The user who claimed the rewards.\n @param amount The amount of tokens claimed.\n @param date The timestamp of the claim."
            },
            "eventSelector": "d92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2",
            "id": 2297,
            "name": "RewardsClaimed",
            "nameLocation": "5212:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5235:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "5228:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3154",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2288,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2287,
                      "name": "IERC20",
                      "nameLocations": [
                        "5228:6:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3154,
                      "src": "5228:6:1"
                    },
                    "referencedDeclaration": 3154,
                    "src": "5228:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3154",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2291,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5250:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "5242:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5242:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2293,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5261:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "5256:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2292,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5256:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2295,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "5274:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "5269:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2294,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5269:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5227:52:1"
            },
            "src": "5206:74:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2298,
              "nodeType": "StructuredDocumentation",
              "src": "5285:144:1",
              "text": " @dev Emitted when a new contract is added to the system.\n @param contractAdded The address of the contract that was added."
            },
            "eventSelector": "89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e205",
            "id": 2302,
            "name": "ContractAdded",
            "nameLocation": "5440:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2300,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAdded",
                  "nameLocation": "5463:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2302,
                  "src": "5455:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5455:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5454:23:1"
            },
            "src": "5434:44:1"
          }
        ],
        "scope": 2304,
        "src": "580:4900:1",
        "usedErrors": []
      }
    ],
    "src": "33:5449:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {
        "0x89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e205": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "contractAdded",
              "type": "address"
            }
          ],
          "name": "ContractAdded",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "RewardsClaimed",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2952E500092C07d6FAC62f4f789cd59BA44C9993",
      "transactionHash": "0xe462e78edc957441853516e6501dffcb6247fb75ed235eab2b9ebafdf6ff84d8"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-09T10:24:40.869Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This contract manages the distribution of rewards in the form of an ERC20 token (HODL) to users who hold specific ERC20 tokens.",
    "events": {
      "ContractAdded(address)": {
        "details": "Emitted when a new contract is added to the system.",
        "params": {
          "contractAdded": "The address of the contract that was added."
        }
      },
      "RewardsClaimed(address,address,uint256,uint256)": {
        "details": "Emitted when a user claims rewards.",
        "params": {
          "amount": "The amount of tokens claimed.",
          "date": "The timestamp of the claim.",
          "token": "The ERC20 token that was claimed.",
          "user": "The user who claimed the rewards."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addContract(address)": {
        "details": "Adds an authorized contract that is allowed to generate rewards for users. Only the contract owner can call this function.",
        "params": {
          "_contract": "The address of the authorized contract."
        }
      },
      "claimAllRewards()": {
        "details": "Allows a user to claim all of their available rewards in the reward token. The user must have a balance greater than 0 to claim any rewards."
      },
      "claimRewards(uint256)": {
        "details": "Allows a user to claim their rewards in the specified amount of tokens. The user must have a balance greater than or equal to the amount being claimed.",
        "params": {
          "_amount": "The amount of tokens to claim as rewards."
        }
      },
      "constructor": {
        "details": "Constructor function",
        "params": {
          "_rewardApy": "The annual percentage yield (APY) for the reward token",
          "_rewardTokenAddress": "The address of the reward token (HODL)"
        }
      },
      "generateRewards(address,address,uint256)": {
        "details": "Generates rewards for a user based on the given amount of tokens and the current APY. Only authorized contracts can call this function.",
        "params": {
          "_amount": "The amount of tokens to generate rewards for.",
          "_token": "The ERC20 token used to generate the rewards.",
          "_user": "The address of the user to receive the rewards."
        }
      },
      "getUSDPriceFromOracle(address)": {
        "details": "Get the USD price of an ERC20 token from its associated Chainlink oracle",
        "params": {
          "_token": "The ERC20 token for which to get the USD price"
        },
        "returns": {
          "_0": "The USD price of the ERC20 token"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setApy(uint256)": {
        "details": "Set the reward APY",
        "params": {
          "_apy": "The new reward APY"
        }
      },
      "setRewardToken(address)": {
        "details": "Set the reward token ",
        "params": {
          "_token": "The address of the new reward token"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "HodlUpRewardsManager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}