{
  "contractName": "HodlUpRewardsManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardApy",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAdded",
          "type": "address"
        }
      ],
      "name": "ContractAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorizedContracts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "oracles",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardApy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setRewardToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_apy",
          "type": "uint256"
        }
      ],
      "name": "setApy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "addOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUSDPriceFromOracle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "addContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "generateRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAllRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardApy\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAdded\",\"type\":\"address\"}],\"name\":\"ContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"addContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAllRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUSDPriceFromOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardApy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"}],\"name\":\"setApy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract manages the distribution of rewards in the form of an ERC20 token (HODL) to users who hold specific ERC20 tokens.\",\"events\":{\"ContractAdded(address)\":{\"details\":\"Emitted when a new contract is added to the system.\",\"params\":{\"contractAdded\":\"The address of the contract that was added.\"}},\"RewardsClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when a user claims rewards.\",\"params\":{\"amount\":\"The amount of tokens claimed.\",\"date\":\"The timestamp of the claim.\",\"token\":\"The ERC20 token that was claimed.\",\"user\":\"The user who claimed the rewards.\"}}},\"kind\":\"dev\",\"methods\":{\"addContract(address)\":{\"details\":\"Adds an authorized contract that is allowed to generate rewards for users. Only the contract owner can call this function.\",\"params\":{\"_contract\":\"The address of the authorized contract.\"}},\"addOracle(address,address)\":{\"details\":\"Adds an oracle address to the oracles mapping\",\"params\":{\"_oracle\":\"The address of the Chainlink oracle contract\",\"_token\":\"The address of the ERC20 token corresponding to the oracle\"}},\"claimAllRewards()\":{\"details\":\"Allows a user to claim all of their available rewards in the reward token. The user must have a balance greater than 0 to claim any rewards.\"},\"claimRewards(uint256)\":{\"details\":\"Allows a user to claim their rewards in the specified amount of tokens. The user must have a balance greater than or equal to the amount being claimed.\",\"params\":{\"_amount\":\"The amount of tokens to claim as rewards.\"}},\"constructor\":{\"details\":\"Constructor function\",\"params\":{\"_rewardApy\":\"The annual percentage yield (APY) for the reward token\",\"_rewardTokenAddress\":\"The address of the reward token (HODL)\"}},\"generateRewards(address,address,uint256)\":{\"details\":\"Generates rewards for a user based on the given amount of tokens and the current APY. Only authorized contracts can call this function.\",\"params\":{\"_amount\":\"The amount of tokens to generate rewards for.\",\"_token\":\"The ERC20 token used to generate the rewards.\",\"_user\":\"The address of the user to receive the rewards.\"}},\"getUSDPriceFromOracle(address)\":{\"details\":\"Get the USD price of an ERC20 token from its associated Chainlink oracle\",\"params\":{\"_token\":\"The ERC20 token for which to get the USD price\"},\"returns\":{\"_0\":\"The USD price of the ERC20 token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApy(uint256)\":{\"details\":\"Set the reward APY\",\"params\":{\"_apy\":\"The new reward APY\"}},\"setRewardToken(address)\":{\"details\":\"Set the reward token \",\"params\":{\"_token\":\"The address of the new reward token\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"HodlUpRewardsManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HodlUpRewardsManager.sol\":\"HodlUpRewardsManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/HodlUpRewardsManager.sol\":{\"keccak256\":\"0x245fbaf1679608f8e958e690110d23e73a5356cda588988a43e3b0f3204f66b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://060dd5accc8667b163c858ced71768df7664923854029c0b0bdfc04f80fff9b5\",\"dweb:/ipfs/QmP6AqoYeD3e7b5mEGhBCxf197EEhXhJL7579vMDZebLdu\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161100b38038061100b83398101604081905261002f916100b1565b61003833610061565b600180546001600160a01b0319166001600160a01b0393909316929092179091556002556100eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100c457600080fd5b82516001600160a01b03811681146100db57600080fd5b6020939093015192949293505050565b610f11806100fa6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638aee812711610097578063f0ca4adb11610066578063f0ca4adb14610208578063f2fde38b1461021b578063f7c618c11461022e578063ff52775d1461024157600080fd5b80638aee8127146101745780638da5cb5b14610187578063addd5099146101ac578063d5b9221b146101d557600080fd5b80635f539d69116100d35780635f539d691461012a5780636cc6ba791461013d578063715018a61461015957806378e368651461016157600080fd5b80630962ef79146100fa5780630b83a7271461010f5780633b3f5e3614610117575b600080fd5b61010d610108366004610b67565b610254565b005b61010d610363565b61010d610125366004610b67565b61045b565b61010d610138366004610b95565b610468565b61014660025481565b6040519081526020015b60405180910390f35b61010d6104c4565b61014661016f366004610bb9565b6104d8565b61010d610182366004610b95565b61057b565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610150565b6101946101ba366004610b95565b6004602052600090815260409020546001600160a01b031681565b6101f86101e3366004610b95565b60056020526000908152604090205460ff1681565b6040519015158152602001610150565b61010d610216366004610bfa565b6105a5565b61010d610229366004610b95565b6105db565b600154610194906001600160a01b031681565b61014661024f366004610b95565b610654565b3360009081526003602052604081205461026f908390610c49565b116102c15760405162461bcd60e51b815260206004820152601c60248201527f4e6f2073756666696369656e742066756e647320746f20636c61696d0000000060448201526064015b60405180910390fd5b33600090815260036020526040812080548392906102e0908490610c49565b90915550506001546102fc906001600160a01b0316338361072e565b600154336000818152600360209081526040918290205482516001600160a01b039095168552908401929092528201524260608201527fd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2906080015b60405180910390a150565b336000908152600360205260409020546103bf5760405162461bcd60e51b815260206004820152601c60248201527f4e6f2073756666696369656e742066756e647320746f20636c61696d0000000060448201526064016102b8565b600154336000818152600360205260409020546103e6926001600160a01b0316919061072e565b600154336000818152600360209081526040918290205482516001600160a01b039095168552908401929092528201524260608201527fd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f29060800160405180910390a133600090815260036020526040812055565b610463610785565b600255565b610470610785565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600117905590519182527f89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e2059101610358565b6104cc610785565b6104d660006107df565b565b3360009081526005602052604081205460ff1615156001146105345760405162461bcd60e51b81526020600482015260156024820152741058d8d95cdcc81b9bdd08185d5d1a1bdc9a5e9959605a1b60448201526064016102b8565b6000610540848461082f565b6001600160a01b03861660009081526003602052604081208054929350839290919061056d908490610c5c565b909155509095945050505050565b610583610785565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6105ad610785565b6001600160a01b03918216600090815260046020526040902080546001600160a01b03191691909216179055565b6105e3610785565b6001600160a01b0381166106485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b8565b610651816107df565b50565b6001600160a01b038082166000908152600460208190526040808320548151633fabe5a360e21b815291519394859491169263feaf968c928082019260a09290918290030181865afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190610c8e565b505050915050600081136107285760405162461bcd60e51b815260206004820152601960248201527f546f6b656e50726963653a20707269636520696e76616c69640000000000000060448201526064016102b8565b92915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610780908490610972565b505050565b6000546001600160a01b031633146104d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03808316600090815260046020818152604080842054815163313ce56760e01b815291519495869591169363313ce5679383820193909291908290030181865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac9190610cde565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190610cde565b6109189190610d01565b61092390600a610dfe565b61092c85610654565b6109369085610e0d565b6109409190610e24565b905061016d612710600254836109569190610e0d565b6109609190610e24565b61096a9190610e24565b949350505050565b60006109c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a449092919063ffffffff16565b80519091501561078057808060200190518101906109e59190610e46565b6107805760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102b8565b606061096a848460008585600080866001600160a01b03168587604051610a6b9190610e8c565b60006040518083038185875af1925050503d8060008114610aa8576040519150601f19603f3d011682016040523d82523d6000602084013e610aad565b606091505b5091509150610abe87838387610ac9565b979650505050505050565b60608315610b38578251600003610b31576001600160a01b0385163b610b315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b8565b508161096a565b61096a8383815115610b4d5781518083602001fd5b8060405162461bcd60e51b81526004016102b89190610ea8565b600060208284031215610b7957600080fd5b5035919050565b6001600160a01b038116811461065157600080fd5b600060208284031215610ba757600080fd5b8135610bb281610b80565b9392505050565b600080600060608486031215610bce57600080fd5b8335610bd981610b80565b92506020840135610be981610b80565b929592945050506040919091013590565b60008060408385031215610c0d57600080fd5b8235610c1881610b80565b91506020830135610c2881610b80565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561072857610728610c33565b8082018082111561072857610728610c33565b805169ffffffffffffffffffff81168114610c8957600080fd5b919050565b600080600080600060a08688031215610ca657600080fd5b610caf86610c6f565b9450602086015193506040860151925060608601519150610cd260808701610c6f565b90509295509295909350565b600060208284031215610cf057600080fd5b815160ff81168114610bb257600080fd5b60ff828116828216039081111561072857610728610c33565b600181815b80851115610d55578160001904821115610d3b57610d3b610c33565b80851615610d4857918102915b93841c9390800290610d1f565b509250929050565b600082610d6c57506001610728565b81610d7957506000610728565b8160018114610d8f5760028114610d9957610db5565b6001915050610728565b60ff841115610daa57610daa610c33565b50506001821b610728565b5060208310610133831016604e8410600b8410161715610dd8575081810a610728565b610de28383610d1a565b8060001904821115610df657610df6610c33565b029392505050565b6000610bb260ff841683610d5d565b808202811582820484141761072857610728610c33565b600082610e4157634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e5857600080fd5b81518015158114610bb257600080fd5b60005b83811015610e83578181015183820152602001610e6b565b50506000910152565b60008251610e9e818460208701610e68565b9190910192915050565b6020815260008251806020840152610ec7816040850160208701610e68565b601f01601f1916919091016040019291505056fea264697066735822122029b13de7843265905f2ea57ec0faeee7f1d4a572c3ea0bb5408c8cd614d2ebe864736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638aee812711610097578063f0ca4adb11610066578063f0ca4adb14610208578063f2fde38b1461021b578063f7c618c11461022e578063ff52775d1461024157600080fd5b80638aee8127146101745780638da5cb5b14610187578063addd5099146101ac578063d5b9221b146101d557600080fd5b80635f539d69116100d35780635f539d691461012a5780636cc6ba791461013d578063715018a61461015957806378e368651461016157600080fd5b80630962ef79146100fa5780630b83a7271461010f5780633b3f5e3614610117575b600080fd5b61010d610108366004610b67565b610254565b005b61010d610363565b61010d610125366004610b67565b61045b565b61010d610138366004610b95565b610468565b61014660025481565b6040519081526020015b60405180910390f35b61010d6104c4565b61014661016f366004610bb9565b6104d8565b61010d610182366004610b95565b61057b565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610150565b6101946101ba366004610b95565b6004602052600090815260409020546001600160a01b031681565b6101f86101e3366004610b95565b60056020526000908152604090205460ff1681565b6040519015158152602001610150565b61010d610216366004610bfa565b6105a5565b61010d610229366004610b95565b6105db565b600154610194906001600160a01b031681565b61014661024f366004610b95565b610654565b3360009081526003602052604081205461026f908390610c49565b116102c15760405162461bcd60e51b815260206004820152601c60248201527f4e6f2073756666696369656e742066756e647320746f20636c61696d0000000060448201526064015b60405180910390fd5b33600090815260036020526040812080548392906102e0908490610c49565b90915550506001546102fc906001600160a01b0316338361072e565b600154336000818152600360209081526040918290205482516001600160a01b039095168552908401929092528201524260608201527fd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2906080015b60405180910390a150565b336000908152600360205260409020546103bf5760405162461bcd60e51b815260206004820152601c60248201527f4e6f2073756666696369656e742066756e647320746f20636c61696d0000000060448201526064016102b8565b600154336000818152600360205260409020546103e6926001600160a01b0316919061072e565b600154336000818152600360209081526040918290205482516001600160a01b039095168552908401929092528201524260608201527fd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f29060800160405180910390a133600090815260036020526040812055565b610463610785565b600255565b610470610785565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600117905590519182527f89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e2059101610358565b6104cc610785565b6104d660006107df565b565b3360009081526005602052604081205460ff1615156001146105345760405162461bcd60e51b81526020600482015260156024820152741058d8d95cdcc81b9bdd08185d5d1a1bdc9a5e9959605a1b60448201526064016102b8565b6000610540848461082f565b6001600160a01b03861660009081526003602052604081208054929350839290919061056d908490610c5c565b909155509095945050505050565b610583610785565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6105ad610785565b6001600160a01b03918216600090815260046020526040902080546001600160a01b03191691909216179055565b6105e3610785565b6001600160a01b0381166106485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b8565b610651816107df565b50565b6001600160a01b038082166000908152600460208190526040808320548151633fabe5a360e21b815291519394859491169263feaf968c928082019260a09290918290030181865afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190610c8e565b505050915050600081136107285760405162461bcd60e51b815260206004820152601960248201527f546f6b656e50726963653a20707269636520696e76616c69640000000000000060448201526064016102b8565b92915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610780908490610972565b505050565b6000546001600160a01b031633146104d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03808316600090815260046020818152604080842054815163313ce56760e01b815291519495869591169363313ce5679383820193909291908290030181865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac9190610cde565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190610cde565b6109189190610d01565b61092390600a610dfe565b61092c85610654565b6109369085610e0d565b6109409190610e24565b905061016d612710600254836109569190610e0d565b6109609190610e24565b61096a9190610e24565b949350505050565b60006109c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a449092919063ffffffff16565b80519091501561078057808060200190518101906109e59190610e46565b6107805760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102b8565b606061096a848460008585600080866001600160a01b03168587604051610a6b9190610e8c565b60006040518083038185875af1925050503d8060008114610aa8576040519150601f19603f3d011682016040523d82523d6000602084013e610aad565b606091505b5091509150610abe87838387610ac9565b979650505050505050565b60608315610b38578251600003610b31576001600160a01b0385163b610b315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b8565b508161096a565b61096a8383815115610b4d5781518083602001fd5b8060405162461bcd60e51b81526004016102b89190610ea8565b600060208284031215610b7957600080fd5b5035919050565b6001600160a01b038116811461065157600080fd5b600060208284031215610ba757600080fd5b8135610bb281610b80565b9392505050565b600080600060608486031215610bce57600080fd5b8335610bd981610b80565b92506020840135610be981610b80565b929592945050506040919091013590565b60008060408385031215610c0d57600080fd5b8235610c1881610b80565b91506020830135610c2881610b80565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561072857610728610c33565b8082018082111561072857610728610c33565b805169ffffffffffffffffffff81168114610c8957600080fd5b919050565b600080600080600060a08688031215610ca657600080fd5b610caf86610c6f565b9450602086015193506040860151925060608601519150610cd260808701610c6f565b90509295509295909350565b600060208284031215610cf057600080fd5b815160ff81168114610bb257600080fd5b60ff828116828216039081111561072857610728610c33565b600181815b80851115610d55578160001904821115610d3b57610d3b610c33565b80851615610d4857918102915b93841c9390800290610d1f565b509250929050565b600082610d6c57506001610728565b81610d7957506000610728565b8160018114610d8f5760028114610d9957610db5565b6001915050610728565b60ff841115610daa57610daa610c33565b50506001821b610728565b5060208310610133831016604e8410600b8410161715610dd8575081810a610728565b610de28383610d1a565b8060001904821115610df657610df6610c33565b029392505050565b6000610bb260ff841683610d5d565b808202811582820484141761072857610728610c33565b600082610e4157634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e5857600080fd5b81518015158114610bb257600080fd5b60005b83811015610e83578181015183820152602001610e6b565b50506000910152565b60008251610e9e818460208701610e68565b9190910192915050565b6020815260008251806020840152610ec7816040850160208701610e68565b601f01601f1916919091016040019291505056fea264697066735822122029b13de7843265905f2ea57ec0faeee7f1d4a572c3ea0bb5408c8cd614d2ebe864736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:367:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "112:253:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "133:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "142:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "129:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "129:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "154:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "122:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "183:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "202:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "196:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:16:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "187:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "275:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "277:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "277:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "234:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "245:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "260:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "265:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "256:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "256:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "269:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "241:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "241:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "231:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "224:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "221:70:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "300:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "310:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "324:35:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "355:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "334:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "334:25:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "324:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:17",
                "type": ""
              }
            ],
            "src": "14:351:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10508:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:17",
                "type": ""
              }
            ],
            "src": "14:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "244:86:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "267:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "278:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "293:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "298:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "289:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "289:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "302:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "285:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "285:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "274:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "274:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "264:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "264:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "257:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "257:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "254:70:17"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "233:5:17",
                "type": ""
              }
            ],
            "src": "199:131:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "405:177:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "451:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "460:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "463:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "453:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "453:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "453:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "426:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "435:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "422:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "422:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "447:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "415:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "476:36:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "502:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "489:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:23:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "480:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "546:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "521:24:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:31:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "571:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "371:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "382:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "394:6:17",
                "type": ""
              }
            ],
            "src": "335:247:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "688:76:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "698:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "710:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "721:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "706:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "706:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "698:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "740:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "751:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "733:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "733:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "657:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "668:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "679:4:17",
                "type": ""
              }
            ],
            "src": "587:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "888:352:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "934:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "943:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "946:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "936:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "936:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "936:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "909:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "918:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "905:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "905:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "930:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "901:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "901:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "898:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "959:36:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "985:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "972:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "972:23:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "963:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1029:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1004:24:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1004:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1004:31:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1044:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1054:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1044:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1068:47:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1100:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1111:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1096:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1096:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1083:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:32:17"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1072:7:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1149:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1124:24:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1124:33:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1166:17:17",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1176:7:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1166:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1192:42:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1219:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1230:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1215:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1215:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1202:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:32:17"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1192:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_ERC20_$11341t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "838:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "849:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "861:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "869:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "877:6:17",
                "type": ""
              }
            ],
            "src": "769:471:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1368:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1379:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1364:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1364:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1356:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1398:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1413:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1429:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1434:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1425:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1425:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1438:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1421:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1421:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1409:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1391:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1315:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1337:4:17",
                "type": ""
              }
            ],
            "src": "1245:203:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1548:92:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1558:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1570:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1581:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1566:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1566:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1558:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1600:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1625:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1618:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1618:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1611:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1611:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1593:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:41:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1593:41:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1517:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1528:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1539:4:17",
                "type": ""
              }
            ],
            "src": "1453:187:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1732:301:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1778:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1787:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1790:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1780:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1780:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1780:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1753:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1762:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1749:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1749:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1774:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1745:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1742:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1803:36:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1829:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1816:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1816:23:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1807:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1873:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1848:24:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1848:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1848:31:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1888:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1898:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1888:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1912:47:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1944:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1955:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1940:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1940:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1927:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1927:32:17"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1916:7:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1993:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1968:24:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1968:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1968:33:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2010:17:17",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2020:7:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2010:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1690:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1701:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1713:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1721:6:17",
                "type": ""
              }
            ],
            "src": "1645:388:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2154:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2164:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2176:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2187:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2172:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2172:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2164:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2206:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2221:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2237:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2242:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2233:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2233:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2246:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2229:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2229:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2217:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2217:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2199:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2199:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2199:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$11341__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2123:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2134:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2145:4:17",
                "type": ""
              }
            ],
            "src": "2038:218:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2293:95:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2310:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2317:3:17",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2322:10:17",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2313:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2313:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2303:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2303:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2303:31:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2350:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2353:4:17",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2343:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2343:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2343:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2374:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2377:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2367:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2367:15:17"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2261:127:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2442:79:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2452:17:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2464:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2467:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2460:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2452:4:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2493:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2495:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2495:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2495:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "2484:4:17"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2490:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2481:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2481:11:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2478:37:17"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2424:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2427:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2433:4:17",
                "type": ""
              }
            ],
            "src": "2393:128:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2700:178:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2717:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2728:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2710:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2710:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2710:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2751:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2762:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2747:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2747:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2767:2:17",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2740:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2740:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2790:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2801:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2786:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2786:18:17"
                      },
                      {
                        "hexValue": "4e6f2073756666696369656e742066756e647320746f20636c61696d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2806:30:17",
                        "type": "",
                        "value": "No sufficient funds to claim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2779:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:58:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2779:58:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2846:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2858:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2869:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2854:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2854:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2846:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2677:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2691:4:17",
                "type": ""
              }
            ],
            "src": "2526:352:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3083:262:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3093:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3105:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3116:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3101:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3101:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3093:4:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3129:29:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3147:3:17",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3152:1:17",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3143:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3143:11:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3156:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3139:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3139:19:17"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3133:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3174:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3189:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3197:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3185:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3185:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3167:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3167:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3167:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3221:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3232:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3217:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3217:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3241:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3249:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3237:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3237:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3210:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3210:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3210:43:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3273:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3284:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3269:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3269:18:17"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3289:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3262:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3316:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3327:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3312:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3312:18:17"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3332:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3305:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3305:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3305:34:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$11341_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3028:9:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3039:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3047:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3055:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3063:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3074:4:17",
                "type": ""
              }
            ],
            "src": "2883:462:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3524:171:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3541:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3552:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3534:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3534:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3534:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3575:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3586:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3571:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3571:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3591:2:17",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3564:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3564:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3564:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3614:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3625:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3610:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3610:18:17"
                      },
                      {
                        "hexValue": "416363657373206e6f7420617574686f72697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3630:23:17",
                        "type": "",
                        "value": "Access not authorized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3603:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3603:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3603:51:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3663:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3675:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3686:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3671:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3671:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3663:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3501:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3515:4:17",
                "type": ""
              }
            ],
            "src": "3350:345:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3748:77:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3758:16:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3769:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3772:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3765:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3765:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3758:3:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3797:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3799:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3799:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3799:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3789:1:17"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "3792:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3786:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3786:10:17"
                  },
                  "nodeType": "YulIf",
                  "src": "3783:36:17"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3731:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3734:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3740:3:17",
                "type": ""
              }
            ],
            "src": "3700:125:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4004:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4021:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4032:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4014:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4014:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4014:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4055:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4066:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4051:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4051:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4071:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4044:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4044:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4044:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4094:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4105:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4090:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4090:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4110:34:17",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4083:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4083:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4083:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4165:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4176:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4161:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4161:18:17"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4181:8:17",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4154:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4154:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4154:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4199:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4211:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4222:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4207:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4207:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4199:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3981:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3995:4:17",
                "type": ""
              }
            ],
            "src": "3830:402:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4296:120:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4306:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4321:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4315:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4315:13:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4306:5:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4394:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4403:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4406:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4396:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4396:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4396:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4350:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4361:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4368:22:17",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4357:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4357:34:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4347:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4347:45:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4340:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4340:53:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4337:73:17"
                }
              ]
            },
            "name": "abi_decode_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4275:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4286:5:17",
                "type": ""
              }
            ],
            "src": "4237:179:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4567:327:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4614:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4623:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4626:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4616:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4616:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4616:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4588:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4597:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4584:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4584:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4609:3:17",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4580:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4580:33:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4577:53:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4639:49:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4678:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "4649:28:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4649:39:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4639:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4697:35:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4717:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4728:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4713:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4713:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4707:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4707:25:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4697:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4741:35:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4761:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4772:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4757:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4757:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4751:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4751:25:17"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4741:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4785:35:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4805:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4816:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4801:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4801:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4795:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4795:25:17"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4785:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4829:59:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4872:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4883:3:17",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4868:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4868:19:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "4839:28:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4839:49:17"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4829:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4501:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4512:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4524:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4532:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4540:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4548:6:17",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4556:6:17",
                "type": ""
              }
            ],
            "src": "4421:473:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5073:175:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5090:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5101:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5083:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5083:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5083:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5124:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5135:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5120:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5120:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5140:2:17",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5113:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5113:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5113:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5163:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5174:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5159:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5159:18:17"
                      },
                      {
                        "hexValue": "546f6b656e50726963653a20707269636520696e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5179:27:17",
                        "type": "",
                        "value": "TokenPrice: price invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5152:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5152:55:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5152:55:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5216:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5228:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5239:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5224:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5224:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5216:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5050:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5064:4:17",
                "type": ""
              }
            ],
            "src": "4899:349:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5382:145:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5392:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5404:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5415:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5400:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5400:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5392:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5434:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5449:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5465:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5470:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5461:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5461:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5474:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5457:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5457:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5445:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5445:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5427:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5427:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5427:51:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5498:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5509:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5494:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5494:18:17"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5514:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5487:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5487:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5487:34:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5343:9:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5354:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5362:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5373:4:17",
                "type": ""
              }
            ],
            "src": "5253:274:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5706:182:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5723:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5734:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5716:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5716:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5716:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5757:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5768:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5753:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5753:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5773:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5746:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5746:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5746:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5796:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5807:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5792:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5792:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5812:34:17",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5785:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5785:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5785:62:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5856:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5868:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5879:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5864:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5864:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5856:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5683:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5697:4:17",
                "type": ""
              }
            ],
            "src": "5532:356:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5972:194:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6018:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6027:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6030:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6020:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6020:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6020:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5993:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6002:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5989:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5989:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6014:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5985:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5985:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5982:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6043:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6062:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6056:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6056:16:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6047:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6120:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6129:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6132:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6122:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6122:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6122:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6094:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6105:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6112:4:17",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6101:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6101:16:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6091:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6091:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6084:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6084:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "6081:55:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6145:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6155:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6145:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5938:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5949:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5961:6:17",
                "type": ""
              }
            ],
            "src": "5893:273:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6218:104:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6228:39:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "6244:1:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6247:4:17",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6240:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6240:12:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6258:1:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6261:4:17",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6254:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6254:12:17"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6236:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6236:31:17"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6228:4:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6294:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6296:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6296:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6296:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "6282:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6288:4:17",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6279:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6279:14:17"
                  },
                  "nodeType": "YulIf",
                  "src": "6276:40:17"
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6200:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6203:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6209:4:17",
                "type": ""
              }
            ],
            "src": "6171:151:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6391:358:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6401:16:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6416:1:17",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "6405:7:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6426:16:17",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "6435:7:17"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "6426:5:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6451:13:17",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "6459:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "6451:4:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6515:228:17",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6560:22:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6562:16:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6562:18:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6562:18:17"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6535:4:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6549:1:17",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "6545:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6545:6:17"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "6553:4:17"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "6541:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6541:17:17"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "6532:2:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6532:27:17"
                        },
                        "nodeType": "YulIf",
                        "src": "6529:53:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6621:29:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6623:25:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "6636:5:17"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "6643:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6632:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6632:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "6623:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6602:8:17"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "6612:7:17"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6598:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6598:22:17"
                        },
                        "nodeType": "YulIf",
                        "src": "6595:55:17"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6663:23:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6675:4:17"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6681:4:17"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "6671:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6671:15:17"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "6663:4:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6699:34:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "6715:7:17"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6724:8:17"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "6711:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6711:22:17"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "6699:8:17"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6484:8:17"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "6494:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6481:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6481:21:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6503:3:17",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6477:3:17",
                    "statements": []
                  },
                  "src": "6473:270:17"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "6355:5:17",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "6362:8:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "6375:5:17",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "6382:4:17",
                "type": ""
              }
            ],
            "src": "6327:422:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6813:747:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6851:52:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6865:10:17",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6874:1:17",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6865:5:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6888:5:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6833:8:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6826:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6826:16:17"
                  },
                  "nodeType": "YulIf",
                  "src": "6823:80:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6936:52:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6950:10:17",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6959:1:17",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6950:5:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6973:5:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6922:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6915:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6915:12:17"
                  },
                  "nodeType": "YulIf",
                  "src": "6912:76:17"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7024:52:17",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "7038:10:17",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7047:1:17",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "7038:5:17"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "7061:5:17"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "7017:59:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7022:1:17",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7092:123:17",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7127:22:17",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "7129:16:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7129:18:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7129:18:17"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "7112:8:17"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7122:3:17",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "7109:2:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7109:17:17"
                            },
                            "nodeType": "YulIf",
                            "src": "7106:43:17"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7162:25:17",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "7175:8:17"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7185:1:17",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7171:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7171:16:17"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "7162:5:17"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "7200:5:17"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "7085:130:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7090:1:17",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "7004:4:17"
                  },
                  "nodeType": "YulSwitch",
                  "src": "6997:218:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7313:70:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7327:28:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "7340:4:17"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "7346:8:17"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "7336:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7336:19:17"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "7327:5:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "7368:5:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "7237:4:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7243:2:17",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "7234:2:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7234:12:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "7251:8:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7261:2:17",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "7248:2:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7248:16:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7230:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7230:35:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "7274:4:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7280:3:17",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "7271:2:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7271:13:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "7289:8:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7299:2:17",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "7286:2:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7286:16:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7267:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7267:36:17"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7227:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7227:77:17"
                  },
                  "nodeType": "YulIf",
                  "src": "7224:159:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7392:57:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "7434:4:17"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "7440:8:17"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "7415:18:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7415:34:17"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "7396:7:17",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "7405:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7494:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7496:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7496:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7496:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "7464:7:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7481:1:17",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "7477:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7477:6:17"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "7485:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "7473:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7473:19:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7461:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7461:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "7458:58:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7525:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "7538:7:17"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "7547:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7534:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7534:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "7525:5:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "6784:4:17",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "6790:8:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "6803:5:17",
                "type": ""
              }
            ],
            "src": "6754:806:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7633:72:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7643:56:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "7673:4:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "7683:8:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7693:4:17",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7679:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7679:19:17"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "7652:20:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7652:47:17"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "7643:5:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "7604:4:17",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "7610:8:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "7623:5:17",
                "type": ""
              }
            ],
            "src": "7565:140:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7762:116:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7772:20:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7787:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7790:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7783:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7783:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7772:7:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7850:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7852:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7852:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7852:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7821:1:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7814:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7814:9:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7828:1:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "7835:7:17"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7844:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "7831:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7831:15:17"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "7825:2:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7825:22:17"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "7811:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7811:37:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7804:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7804:45:17"
                  },
                  "nodeType": "YulIf",
                  "src": "7801:71:17"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7741:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7744:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7750:7:17",
                "type": ""
              }
            ],
            "src": "7710:168:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7929:171:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7960:111:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7981:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7988:3:17",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7993:10:17",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7984:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7984:20:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7974:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7974:31:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7974:31:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8025:1:17",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8028:4:17",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8018:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8018:15:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8018:15:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8053:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8056:4:17",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8046:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8046:15:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8046:15:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7949:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7942:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7942:9:17"
                  },
                  "nodeType": "YulIf",
                  "src": "7939:132:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8080:14:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8089:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8092:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8085:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8085:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8080:1:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7914:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7917:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7923:1:17",
                "type": ""
              }
            ],
            "src": "7883:217:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8183:199:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8229:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8238:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8241:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8231:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8231:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8231:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8204:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8213:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8200:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8200:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8225:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8196:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8196:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "8193:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8254:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8273:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8267:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8267:16:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8258:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8336:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8345:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8348:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8338:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8338:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8338:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8305:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8326:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8319:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8319:13:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8312:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8312:21:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8302:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8302:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8295:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8295:40:17"
                  },
                  "nodeType": "YulIf",
                  "src": "8292:60:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8361:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8371:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8361:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8149:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8160:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8172:6:17",
                "type": ""
              }
            ],
            "src": "8105:277:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8561:232:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8578:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8589:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8571:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8571:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8571:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8612:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8623:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8608:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8608:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8628:2:17",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8601:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8601:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8601:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8651:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8662:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8647:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8647:18:17"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8667:34:17",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8640:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8640:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8640:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8722:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8733:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8718:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8718:18:17"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8738:12:17",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8711:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8711:40:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8711:40:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8760:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8772:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8783:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8768:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8768:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8760:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8538:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8552:4:17",
                "type": ""
              }
            ],
            "src": "8387:406:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8972:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8989:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9000:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8982:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8982:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8982:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9023:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9034:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9019:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9019:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9039:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9012:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9012:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9012:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9062:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9073:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9058:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9058:18:17"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9078:34:17",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9051:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9051:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9051:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9133:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9144:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9129:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9129:18:17"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9149:8:17",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9122:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9122:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9122:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9167:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9179:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9190:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9175:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9175:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9167:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8949:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8963:4:17",
                "type": ""
              }
            ],
            "src": "8798:402:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9271:184:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9281:10:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9290:1:17",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9285:1:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9350:63:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9375:3:17"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9380:1:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9371:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9371:11:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9394:3:17"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9399:1:17"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9390:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9390:11:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9384:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9384:18:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9364:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9364:39:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9364:39:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9311:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9314:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9308:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9308:13:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9322:19:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9324:15:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9333:1:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9336:2:17",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9329:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9329:10:17"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9324:1:17"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9304:3:17",
                    "statements": []
                  },
                  "src": "9300:113:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "9433:3:17"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9438:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9429:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9429:16:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9447:1:17",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9422:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9422:27:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9422:27:17"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9249:3:17",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9254:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9259:6:17",
                "type": ""
              }
            ],
            "src": "9205:250:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9597:150:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9607:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9627:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9621:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9621:13:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9611:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9682:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9690:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9678:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9678:17:17"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9697:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9702:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "9643:34:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9643:66:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9643:66:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9718:23:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9729:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9734:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9725:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9725:16:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9718:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9573:3:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9578:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9589:3:17",
                "type": ""
              }
            ],
            "src": "9460:287:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9926:179:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9943:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9954:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9936:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9936:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9936:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9977:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9988:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9973:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9973:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9993:2:17",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9966:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9966:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9966:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10016:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10027:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10012:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10012:18:17"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10032:31:17",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10005:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10005:59:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10005:59:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10073:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10085:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10096:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10081:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10081:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10073:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9903:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9917:4:17",
                "type": ""
              }
            ],
            "src": "9752:353:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10231:275:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10248:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10259:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10241:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10241:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10241:21:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10271:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10291:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10285:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10285:13:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10275:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10318:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10329:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10314:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10314:18:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10334:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10307:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10307:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10307:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10389:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10397:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10385:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10385:15:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10406:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10417:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10402:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10402:18:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10422:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "10350:34:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10350:79:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10350:79:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10438:62:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10454:9:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10473:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10481:2:17",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10469:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10469:15:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10490:2:17",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10486:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10486:7:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10465:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10465:29:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10450:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10450:45:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10497:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10446:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10446:54:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10438:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10200:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10211:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10222:4:17",
                "type": ""
              }
            ],
            "src": "10110:396:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_contract$_ERC20_$11341t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$11341__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"No sufficient funds to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$11341_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Access not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"TokenPrice: price invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "580:5329:1:-:0;;;1083:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:5;719:10:12;936:18:5;:32::i;:::-;1151:11:1;:40;;-1:-1:-1;;;;;;1151:40:1;-1:-1:-1;;;;;1151:40:1;;;;;;;;;;;1201:9;:22;580:5329;;2433:187:5;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:5;;;-1:-1:-1;;;;;;2541:17:5;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:351:17:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:17;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:17:o;:::-;580:5329:1;;;;;;",
  "deployedSourceMap": "580:5329:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4509:342;;;;;;:::i;:::-;;:::i;:::-;;5033:331;;;:::i;2249:79::-;;;;;;:::i;:::-;;:::i;3417:152::-;;;;;;:::i;:::-;;:::i;709:21::-;;;;;;;;;733:25:17;;;721:2;706:18;709:21:1;;;;;;;;1831:101:5;;;:::i;3943:313:1:-;;;;;;:::i;:::-;;:::i;2055:103::-;;;;;;:::i;:::-;;:::i;1201:85:5:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:5;1201:85;;;-1:-1:-1;;;;;1409:32:17;;;1391:51;;1379:2;1364:18;1201:85:5;1245:203:17;775:42:1;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;775:42:1;;;823:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1618:14:17;;1611:22;1593:41;;1581:2;1566:18;823:51:1;1453:187:17;2559:113:1;;;;;;:::i;:::-;;:::i;2081:198:5:-;;;;;;:::i;:::-;;:::i;679:24:1:-;;;;;-1:-1:-1;;;;;679:24:1;;;2895:298;;;;;;:::i;:::-;;:::i;4509:342::-;4582:10;4606:1;4573:20;;;:8;:20;;;;;;:30;;4596:7;;4573:30;:::i;:::-;:34;4564:77;;;;-1:-1:-1;;;4564:77:1;;2728:2:17;4564:77:1;;;2710:21:17;2767:2;2747:18;;;2740:30;2806;2786:18;;;2779:58;2854:18;;4564:77:1;;;;;;;;;4660:10;4651:20;;;;:8;:20;;;;;:32;;4676:7;;4651:20;:32;;4676:7;;4651:32;:::i;:::-;;;;-1:-1:-1;;4717:11:1;;4694:56;;-1:-1:-1;;;;;4717:11:1;4730:10;4742:7;4694:22;:56::i;:::-;4781:11;;4794:10;4781:11;4806:20;;;:8;:20;;;;;;;;;;4765:79;;-1:-1:-1;;;;;4781:11:1;;;3167:34:17;;3217:18;;;3210:43;;;;3269:18;;3262:34;4828:15:1;3327:2:17;3312:18;;3305:34;4765:79:1;;3116:3:17;3101:19;4765:79:1;;;;;;;;4509:342;:::o;5033:331::-;5097:10;5111:1;5088:20;;;:8;:20;;;;;;5079:67;;;;-1:-1:-1;;;5079:67:1;;2728:2:17;5079:67:1;;;2710:21:17;2767:2;2747:18;;;2740:30;2806;2786:18;;;2779:58;2854:18;;5079:67:1;2526:352:17;5079:67:1;5179:11;;5192:10;5179:11;5204:20;;;:8;:20;;;;;;5156:69;;-1:-1:-1;;;;;5179:11:1;;5192:10;5156:22;:69::i;:::-;5256:11;;5269:10;5256:11;5281:20;;;:8;:20;;;;;;;;;;5240:79;;-1:-1:-1;;;;;5256:11:1;;;3167:34:17;;3217:18;;;3210:43;;;;3269:18;;3262:34;5303:15:1;3327:2:17;3312:18;;3305:34;5240:79:1;;3116:3:17;3101:19;5240:79:1;;;;;;;5338:10;5352:1;5329:20;;;:8;:20;;;;;:24;5033:331::o;2249:79::-;1094:13:5;:11;:13::i;:::-;2305:9:1::1;:16:::0;2249:79::o;3417:152::-;1094:13:5;:11;:13::i;:::-;-1:-1:-1;;;;;3485:30:1;::::1;;::::0;;;:19:::1;:30;::::0;;;;;;;;:37;;-1:-1:-1;;3485:37:1::1;3518:4;3485:37;::::0;;3537:25;;1391:51:17;;;3537:25:1::1;::::0;1364:18:17;3537:25:1::1;1245:203:17::0;1831:101:5;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3943:313:1:-;4076:10;4029:7;4056:31;;;:19;:31;;;;;;;;:39;;:31;:39;4047:75;;;;-1:-1:-1;;;4047:75:1;;3552:2:17;4047:75:1;;;3534:21:17;3591:2;3571:18;;;3564:30;-1:-1:-1;;;3610:18:17;;;3603:51;3671:18;;4047:75:1;3350:345:17;4047:75:1;4132:15;4150:39;4173:6;4181:7;4150:22;:39::i;:::-;-1:-1:-1;;;;;4199:15:1;;;;;;:8;:15;;;;;:26;;4132:57;;-1:-1:-1;4132:57:1;;4199:15;;;:26;;4132:57;;4199:26;:::i;:::-;;;;-1:-1:-1;4242:7:1;;3943:313;-1:-1:-1;;;;;3943:313:1:o;2055:103::-;1094:13:5;:11;:13::i;:::-;2124:11:1::1;:27:::0;;-1:-1:-1;;;;;;2124:27:1::1;-1:-1:-1::0;;;;;2124:27:1;;;::::1;::::0;;;::::1;::::0;;2055:103::o;2559:113::-;1094:13:5;:11;:13::i;:::-;-1:-1:-1;;;;;2640:15:1;;::::1;;::::0;;;:7:::1;:15;::::0;;;;:25;;-1:-1:-1;;;;;;2640:25:1::1;::::0;;;::::1;;::::0;;2559:113::o;2081:198:5:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:5;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:5;;4032:2:17;2161:73:5::1;::::0;::::1;4014:21:17::0;4071:2;4051:18;;;4044:30;4110:34;4090:18;;;4083:62;-1:-1:-1;;;4161:18:17;;;4154:36;4207:19;;2161:73:5::1;3830:402:17::0;2161:73:5::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2895:298:1:-;-1:-1:-1;;;;;3028:15:1;;;2963:7;3028:15;;;:7;:15;;;;;;;;;3006:56;;-1:-1:-1;;;3006:56:1;;;;2963:7;;;;3028:15;;;3006:54;;:56;;;;;;;;;;;;;3028:15;3006:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2982:80;;;;;;3088:1;3080:5;:9;3072:47;;;;-1:-1:-1;;;3072:47:1;;5101:2:17;3072:47:1;;;5083:21:17;5140:2;5120:18;;;5113:30;5179:27;5159:18;;;5152:55;5224:18;;3072:47:1;4899:349:17;3072:47:1;3180:5;2895:298;-1:-1:-1;;2895:298:1:o;763:205:10:-;902:58;;;-1:-1:-1;;;;;5445:32:17;;902:58:10;;;5427:51:17;5494:18;;;;5487:34;;;902:58:10;;;;;;;;;;5400:18:17;;;;902:58:10;;;;;;;;-1:-1:-1;;;;;902:58:10;-1:-1:-1;;;902:58:10;;;875:86;;895:5;;875:19;:86::i;:::-;763:205;;;:::o;1359:130:5:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:5;719:10:12;1422:23:5;1414:68;;;;-1:-1:-1;;;1414:68:5;;5734:2:17;1414:68:5;;;5716:21:17;;;5753:18;;;5746:30;5812:34;5792:18;;;5785:62;5864:18;;1414:68:5;5532:356:17;2433:187:5;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:5;;;-1:-1:-1;;;;;;2541:17:5;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1598:344:1:-;-1:-1:-1;;;;;1835:24:1;;;1684:7;1835:24;;;:7;:24;;;;;;;;;1813:58;;-1:-1:-1;;;1813:58:1;;;;1684:7;;;;1835:24;;;1813:56;;:58;;;;1835:24;;1813:58;;;;;;;1835:24;1813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1792:6;-1:-1:-1;;;;;1786:22:1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;1779:93;;:2;:93;:::i;:::-;1736:38;1766:6;1736:21;:38::i;:::-;1726:48;;:7;:48;:::i;:::-;1725:148;;;;:::i;:::-;1702:171;;1932:3;1923:5;1910:9;;1892:15;:27;;;;:::i;:::-;1891:37;;;;:::i;:::-;1890:45;;;;:::i;:::-;1883:52;1598:344;-1:-1:-1;;;;1598:344:1:o;3747:706:10:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:10;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:10;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:10;;8589:2:17;4351:85:10;;;8571:21:17;8628:2;8608:18;;;8601:30;8667:34;8647:18;;;8640:62;-1:-1:-1;;;8718:18:17;;;8711:40;8768:19;;4351:85:10;8387:406:17;3873:223:11;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:11;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:11:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:11;;;7908:60;;;;-1:-1:-1;;;7908:60:11;;9954:2:17;7908:60:11;;;9936:21:17;9993:2;9973:18;;;9966:30;10032:31;10012:18;;;10005:59;10081:18;;7908:60:11;9752:353:17;7908:60:11;-1:-1:-1;8003:10:11;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:11;;;;;;;;:::i;14:180:17:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:17;;14:180;-1:-1:-1;14:180:17:o;199:131::-;-1:-1:-1;;;;;274:31:17;;264:42;;254:70;;320:1;317;310:12;335:247;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;502:9;489:23;521:31;546:5;521:31;:::i;:::-;571:5;335:247;-1:-1:-1;;;335:247:17:o;769:471::-;861:6;869;877;930:2;918:9;909:7;905:23;901:32;898:52;;;946:1;943;936:12;898:52;985:9;972:23;1004:31;1029:5;1004:31;:::i;:::-;1054:5;-1:-1:-1;1111:2:17;1096:18;;1083:32;1124:33;1083:32;1124:33;:::i;:::-;769:471;;1176:7;;-1:-1:-1;;;1230:2:17;1215:18;;;;1202:32;;769:471::o;1645:388::-;1713:6;1721;1774:2;1762:9;1753:7;1749:23;1745:32;1742:52;;;1790:1;1787;1780:12;1742:52;1829:9;1816:23;1848:31;1873:5;1848:31;:::i;:::-;1898:5;-1:-1:-1;1955:2:17;1940:18;;1927:32;1968:33;1927:32;1968:33;:::i;:::-;2020:7;2010:17;;;1645:388;;;;;:::o;2261:127::-;2322:10;2317:3;2313:20;2310:1;2303:31;2353:4;2350:1;2343:15;2377:4;2374:1;2367:15;2393:128;2460:9;;;2481:11;;;2478:37;;;2495:18;;:::i;3700:125::-;3765:9;;;3786:10;;;3783:36;;;3799:18;;:::i;4237:179::-;4315:13;;4368:22;4357:34;;4347:45;;4337:73;;4406:1;4403;4396:12;4337:73;4237:179;;;:::o;4421:473::-;4524:6;4532;4540;4548;4556;4609:3;4597:9;4588:7;4584:23;4580:33;4577:53;;;4626:1;4623;4616:12;4577:53;4649:39;4678:9;4649:39;:::i;:::-;4639:49;;4728:2;4717:9;4713:18;4707:25;4697:35;;4772:2;4761:9;4757:18;4751:25;4741:35;;4816:2;4805:9;4801:18;4795:25;4785:35;;4839:49;4883:3;4872:9;4868:19;4839:49;:::i;:::-;4829:59;;4421:473;;;;;;;;:::o;5893:273::-;5961:6;6014:2;6002:9;5993:7;5989:23;5985:32;5982:52;;;6030:1;6027;6020:12;5982:52;6062:9;6056:16;6112:4;6105:5;6101:16;6094:5;6091:27;6081:55;;6132:1;6129;6122:12;6171:151;6261:4;6254:12;;;6240;;;6236:31;;6279:14;;6276:40;;;6296:18;;:::i;6327:422::-;6416:1;6459:5;6416:1;6473:270;6494:7;6484:8;6481:21;6473:270;;;6553:4;6549:1;6545:6;6541:17;6535:4;6532:27;6529:53;;;6562:18;;:::i;:::-;6612:7;6602:8;6598:22;6595:55;;;6632:16;;;;6595:55;6711:22;;;;6671:15;;;;6473:270;;;6477:3;6327:422;;;;;:::o;6754:806::-;6803:5;6833:8;6823:80;;-1:-1:-1;6874:1:17;6888:5;;6823:80;6922:4;6912:76;;-1:-1:-1;6959:1:17;6973:5;;6912:76;7004:4;7022:1;7017:59;;;;7090:1;7085:130;;;;6997:218;;7017:59;7047:1;7038:10;;7061:5;;;7085:130;7122:3;7112:8;7109:17;7106:43;;;7129:18;;:::i;:::-;-1:-1:-1;;7185:1:17;7171:16;;7200:5;;6997:218;;7299:2;7289:8;7286:16;7280:3;7274:4;7271:13;7267:36;7261:2;7251:8;7248:16;7243:2;7237:4;7234:12;7230:35;7227:77;7224:159;;;-1:-1:-1;7336:19:17;;;7368:5;;7224:159;7415:34;7440:8;7434:4;7415:34;:::i;:::-;7485:6;7481:1;7477:6;7473:19;7464:7;7461:32;7458:58;;;7496:18;;:::i;:::-;7534:20;;6754:806;-1:-1:-1;;;6754:806:17:o;7565:140::-;7623:5;7652:47;7693:4;7683:8;7679:19;7673:4;7652:47;:::i;7710:168::-;7783:9;;;7814;;7831:15;;;7825:22;;7811:37;7801:71;;7852:18;;:::i;7883:217::-;7923:1;7949;7939:132;;7993:10;7988:3;7984:20;7981:1;7974:31;8028:4;8025:1;8018:15;8056:4;8053:1;8046:15;7939:132;-1:-1:-1;8085:9:17;;7883:217::o;8105:277::-;8172:6;8225:2;8213:9;8204:7;8200:23;8196:32;8193:52;;;8241:1;8238;8231:12;8193:52;8273:9;8267:16;8326:5;8319:13;8312:21;8305:5;8302:32;8292:60;;8348:1;8345;8338:12;9205:250;9290:1;9300:113;9314:6;9311:1;9308:13;9300:113;;;9390:11;;;9384:18;9371:11;;;9364:39;9336:2;9329:10;9300:113;;;-1:-1:-1;;9447:1:17;9429:16;;9422:27;9205:250::o;9460:287::-;9589:3;9627:6;9621:13;9643:66;9702:6;9697:3;9690:4;9682:6;9678:17;9643:66;:::i;:::-;9725:16;;;;;9460:287;-1:-1:-1;;9460:287:17:o;10110:396::-;10259:2;10248:9;10241:21;10222:4;10291:6;10285:13;10334:6;10329:2;10318:9;10314:18;10307:34;10350:79;10422:6;10417:2;10406:9;10402:18;10397:2;10389:6;10385:15;10350:79;:::i;:::-;10490:2;10469:15;-1:-1:-1;;10465:29:17;10450:45;;;;10497:2;10446:54;;10110:396;-1:-1:-1;;10110:396:17:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport \"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nusing SafeERC20 for IERC20;\n\n/**\n * @title HodlUpRewardsManager\n * @dev This contract manages the distribution of rewards in the form of an ERC20 token (HODL) to users who hold specific ERC20 tokens.\n */\ncontract HodlUpRewardsManager is Ownable {\n\n    // 1 rewardToken (here HODL) is equal to 1 USD\n    ERC20 public rewardToken;\n    uint public rewardApy;\n    mapping(address => uint) balances;\n    mapping(address => address) public oracles;\n    mapping(address => bool) public authorizedContracts;\n\n    /**\n     * @dev Constructor function\n     * @param _rewardTokenAddress The address of the reward token (HODL)\n     * @param _rewardApy The annual percentage yield (APY) for the reward token\n     */\n    constructor(address _rewardTokenAddress, uint _rewardApy) {\n        rewardToken = ERC20(_rewardTokenAddress);\n        rewardApy = _rewardApy;\n    }\n\n    /**\n     * @dev Internal function to get the daily reward for a specific ERC20 token based on its USD price and the reward APY\n     * @param _token The ERC20 token for which to calculate the daily reward\n     * @param _amount The amount of the ERC20 token for which to calculate the daily reward\n     * @return The daily reward amount in HODL tokens\n     */\n    function _getDailyRewardWithAPY(ERC20 _token, uint256 _amount) internal view returns (uint256){\n        uint amountConverted = (_amount * getUSDPriceFromOracle(address(_token))) / (10 ** (ERC20(_token).decimals() - AggregatorV3Interface(oracles[address(_token)]).decimals()));\n        return ((amountConverted * rewardApy) / 10000) / 365;\n    }\n\n    /**\n     * @dev Set the reward token \n     * @param _token The address of the new reward token\n     */\n    function setRewardToken(address _token) external onlyOwner {\n        rewardToken = ERC20(_token);\n    }\n\n    /**\n     * @dev Set the reward APY\n     * @param _apy The new reward APY\n     */\n    function setApy(uint _apy) external onlyOwner {\n        rewardApy = _apy;\n    }    \n\n    /**\n     * @dev Adds an oracle address to the oracles mapping\n     * @param _token The address of the ERC20 token corresponding to the oracle\n     * @param _oracle The address of the Chainlink oracle contract\n     */\n    function addOracle(address _token, address _oracle) external onlyOwner {\n        oracles[_token] = _oracle;\n    }\n\n    /**\n     * @dev Get the USD price of an ERC20 token from its associated Chainlink oracle\n     * @param _token The ERC20 token for which to get the USD price\n     * @return The USD price of the ERC20 token\n     */\n    function getUSDPriceFromOracle(address _token) public view returns (uint256) {\n        (, int256 price, , ,) = AggregatorV3Interface(oracles[_token]).latestRoundData();\n        require(price > 0, \"TokenPrice: price invalid\");\n        // result is on 8 decimals \n        return uint256(price);\n    }\n\n    /**\n    * @dev Adds an authorized contract that is allowed to generate rewards for users.\n    * Only the contract owner can call this function.\n    * @param _contract The address of the authorized contract.\n    */\n    function addContract(address _contract) external onlyOwner{\n        authorizedContracts[_contract] = true;\n        emit ContractAdded (_contract);\n    }\n\n    /**\n    * @dev Generates rewards for a user based on the given amount of tokens and the current APY.\n    * Only authorized contracts can call this function.\n    * @param _user The address of the user to receive the rewards.\n    * @param _token The ERC20 token used to generate the rewards.\n    * @param _amount The amount of tokens to generate rewards for.\n    */\n    function generateRewards(address _user, ERC20 _token, uint _amount) external returns (uint256){\n        require (authorizedContracts[msg.sender] == true, \"Access not authorized\" );\n        uint256 rewards = _getDailyRewardWithAPY(_token, _amount);\n        balances[_user] += rewards;\n        return rewards;\n    }\n\n    /**\n    * @dev Allows a user to claim their rewards in the specified amount of tokens.\n    * The user must have a balance greater than or equal to the amount being claimed.\n    * @param _amount The amount of tokens to claim as rewards.\n    */\n    function claimRewards(uint _amount) external {\n        require (balances[msg.sender] - _amount > 0, \"No sufficient funds to claim\" );\n        balances[msg.sender] -=  _amount ;\n        SafeERC20.safeTransfer(rewardToken, msg.sender, _amount);\n        emit RewardsClaimed (rewardToken, msg.sender, balances[msg.sender], block.timestamp);\n    }   \n\n    /**\n    * @dev Allows a user to claim all of their available rewards in the reward token.\n    * The user must have a balance greater than 0 to claim any rewards.\n    */\n    function claimAllRewards() external {\n        require (balances[msg.sender] > 0, \"No sufficient funds to claim\" );\n        SafeERC20.safeTransfer(rewardToken, msg.sender, balances[msg.sender]);\n        emit RewardsClaimed (rewardToken, msg.sender, balances[msg.sender], block.timestamp);\n        balances[msg.sender] = 0 ;   \n    }   \n\n    /**\n    * @dev Emitted when a user claims rewards.\n    * @param token The ERC20 token that was claimed.\n    * @param user The user who claimed the rewards.\n    * @param amount The amount of tokens claimed.\n    * @param date The timestamp of the claim.\n    */\n    event RewardsClaimed (ERC20 token, address user, uint amount, uint date);\n    /**\n    * @dev Emitted when a new contract is added to the system.\n    * @param contractAdded The address of the contract that was added.\n    */\n    event ContractAdded (address contractAdded);\n}\n\n",
  "sourcePath": "/home/sjouany/ProjetFinal/HodlUp/truffle/contracts/HodlUpRewardsManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/HodlUpRewardsManager.sol",
    "exportedSymbols": {
      "Address": [
        12091
      ],
      "AggregatorV3Interface": [
        2470
      ],
      "Context": [
        12113
      ],
      "ERC20": [
        11341
      ],
      "HodlUpRewardsManager": [
        2356
      ],
      "IERC20": [
        11419
      ],
      "IERC20Metadata": [
        11444
      ],
      "IERC20Permit": [
        11480
      ],
      "Ownable": [
        10754
      ],
      "SafeERC20": [
        11761
      ]
    },
    "id": 2357,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2009,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:1"
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 2010,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2357,
        "sourceUnit": 2471,
        "src": "59:92:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 2011,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2357,
        "sourceUnit": 10755,
        "src": "152:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2012,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2357,
        "sourceUnit": 11342,
        "src": "221:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2013,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2357,
        "sourceUnit": 11762,
        "src": "293:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "global": false,
        "id": 2017,
        "libraryName": {
          "id": 2014,
          "name": "SafeERC20",
          "nameLocations": [
            "382:9:1"
          ],
          "nodeType": "IdentifierPath",
          "referencedDeclaration": 11761,
          "src": "382:9:1"
        },
        "nodeType": "UsingForDirective",
        "src": "376:27:1",
        "typeName": {
          "id": 2016,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 2015,
            "name": "IERC20",
            "nameLocations": [
              "396:6:1"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 11419,
            "src": "396:6:1"
          },
          "referencedDeclaration": 11419,
          "src": "396:6:1",
          "typeDescriptions": {
            "typeIdentifier": "t_contract$_IERC20_$11419",
            "typeString": "contract IERC20"
          }
        }
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2019,
              "name": "Ownable",
              "nameLocations": [
                "613:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10754,
              "src": "613:7:1"
            },
            "id": 2020,
            "nodeType": "InheritanceSpecifier",
            "src": "613:7:1"
          }
        ],
        "canonicalName": "HodlUpRewardsManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2018,
          "nodeType": "StructuredDocumentation",
          "src": "405:174:1",
          "text": " @title HodlUpRewardsManager\n @dev This contract manages the distribution of rewards in the form of an ERC20 token (HODL) to users who hold specific ERC20 tokens."
        },
        "fullyImplemented": true,
        "id": 2356,
        "linearizedBaseContracts": [
          2356,
          10754,
          12113
        ],
        "name": "HodlUpRewardsManager",
        "nameLocation": "589:20:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f7c618c1",
            "id": 2023,
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "692:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 2356,
            "src": "679:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$11341",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2022,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2021,
                "name": "ERC20",
                "nameLocations": [
                  "679:5:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11341,
                "src": "679:5:1"
              },
              "referencedDeclaration": 11341,
              "src": "679:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11341",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6cc6ba79",
            "id": 2025,
            "mutability": "mutable",
            "name": "rewardApy",
            "nameLocation": "721:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2356,
            "src": "709:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2024,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "709:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2029,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "761:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 2356,
            "src": "736:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2028,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2026,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "744:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "736:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2027,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "755:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "addd5099",
            "id": 2033,
            "mutability": "mutable",
            "name": "oracles",
            "nameLocation": "810:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2356,
            "src": "775:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2032,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2030,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "783:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "775:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2031,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "794:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5b9221b",
            "id": 2037,
            "mutability": "mutable",
            "name": "authorizedContracts",
            "nameLocation": "855:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 2356,
            "src": "823:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2036,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2034,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "831:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "823:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2035,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "842:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2055,
              "nodeType": "Block",
              "src": "1141:89:1",
              "statements": [
                {
                  "expression": {
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2045,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2023,
                      "src": "1151:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11341",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2047,
                          "name": "_rewardTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "1171:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2046,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11341,
                        "src": "1165:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$11341_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1165:26:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11341",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1151:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11341",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:40:1"
                },
                {
                  "expression": {
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2051,
                      "name": "rewardApy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "1201:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2052,
                      "name": "_rewardApy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2042,
                      "src": "1213:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1201:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:22:1"
                }
              ]
            },
            "documentation": {
              "id": 2038,
              "nodeType": "StructuredDocumentation",
              "src": "881:197:1",
              "text": " @dev Constructor function\n @param _rewardTokenAddress The address of the reward token (HODL)\n @param _rewardApy The annual percentage yield (APY) for the reward token"
            },
            "id": 2056,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2040,
                  "mutability": "mutable",
                  "name": "_rewardTokenAddress",
                  "nameLocation": "1103:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2056,
                  "src": "1095:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2042,
                  "mutability": "mutable",
                  "name": "_rewardApy",
                  "nameLocation": "1129:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2056,
                  "src": "1124:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2041,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:46:1"
            },
            "returnParameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1141:0:1"
            },
            "scope": 2356,
            "src": "1083:147:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "1692:250:1",
              "statements": [
                {
                  "assignments": [
                    2068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2068,
                      "mutability": "mutable",
                      "name": "amountConverted",
                      "nameLocation": "1707:15:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2110,
                      "src": "1702:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2067,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1702:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2099,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2069,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2062,
                            "src": "1726:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2073,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2060,
                                    "src": "1766:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$11341",
                                      "typeString": "contract ERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$11341",
                                      "typeString": "contract ERC20"
                                    }
                                  ],
                                  "id": 2072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1758:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2071,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1758:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1758:15:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2070,
                              "name": "getUSDPriceFromOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2187,
                              "src": "1736:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1736:38:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1726:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2077,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1725:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 2078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1779:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 2094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2080,
                                          "name": "_token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2060,
                                          "src": "1792:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20_$11341",
                                            "typeString": "contract ERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ERC20_$11341",
                                            "typeString": "contract ERC20"
                                          }
                                        ],
                                        "id": 2079,
                                        "name": "ERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11341,
                                        "src": "1786:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC20_$11341_$",
                                          "typeString": "type(contract ERC20)"
                                        }
                                      },
                                      "id": 2081,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1786:13:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$11341",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 2082,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1800:8:1",
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10829,
                                    "src": "1786:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 2083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1786:24:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2085,
                                            "name": "oracles",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2033,
                                            "src": "1835:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                              "typeString": "mapping(address => address)"
                                            }
                                          },
                                          "id": 2090,
                                          "indexExpression": {
                                            "arguments": [
                                              {
                                                "id": 2088,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2060,
                                                "src": "1851:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ERC20_$11341",
                                                  "typeString": "contract ERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ERC20_$11341",
                                                  "typeString": "contract ERC20"
                                                }
                                              ],
                                              "id": 2087,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1843:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2086,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1843:7:1",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2089,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1843:15:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1835:24:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2084,
                                        "name": "AggregatorV3Interface",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2470,
                                        "src": "1813:21:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2470_$",
                                          "typeString": "type(contract AggregatorV3Interface)"
                                        }
                                      },
                                      "id": 2091,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1813:47:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$2470",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "id": 2092,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1861:8:1",
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2431,
                                    "src": "1813:56:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 2093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1813:58:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1786:85:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 2095,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1785:87:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1779:93:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2097,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1778:95:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1725:148:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1702:171:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2100,
                                  "name": "amountConverted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2068,
                                  "src": "1892:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2101,
                                  "name": "rewardApy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2025,
                                  "src": "1910:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1892:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2103,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1891:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 2104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1923:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1891:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2106,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1890:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "333635",
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1932:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_365_by_1",
                        "typeString": "int_const 365"
                      },
                      "value": "365"
                    },
                    "src": "1890:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2066,
                  "id": 2109,
                  "nodeType": "Return",
                  "src": "1883:52:1"
                }
              ]
            },
            "documentation": {
              "id": 2057,
              "nodeType": "StructuredDocumentation",
              "src": "1236:357:1",
              "text": " @dev Internal function to get the daily reward for a specific ERC20 token based on its USD price and the reward APY\n @param _token The ERC20 token for which to calculate the daily reward\n @param _amount The amount of the ERC20 token for which to calculate the daily reward\n @return The daily reward amount in HODL tokens"
            },
            "id": 2111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getDailyRewardWithAPY",
            "nameLocation": "1607:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1636:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "1630:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$11341",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2059,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2058,
                      "name": "ERC20",
                      "nameLocations": [
                        "1630:5:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11341,
                      "src": "1630:5:1"
                    },
                    "referencedDeclaration": 11341,
                    "src": "1630:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11341",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2062,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1652:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "1644:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1629:31:1"
            },
            "returnParameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "1684:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1683:9:1"
            },
            "scope": 2356,
            "src": "1598:344:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2125,
              "nodeType": "Block",
              "src": "2114:44:1",
              "statements": [
                {
                  "expression": {
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2119,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2023,
                      "src": "2124:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11341",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2121,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2114,
                          "src": "2144:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2120,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11341,
                        "src": "2138:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$11341_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2138:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11341",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2124:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11341",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:27:1"
                }
              ]
            },
            "documentation": {
              "id": 2112,
              "nodeType": "StructuredDocumentation",
              "src": "1948:102:1",
              "text": " @dev Set the reward token \n @param _token The address of the new reward token"
            },
            "functionSelector": "8aee8127",
            "id": 2126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2117,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2116,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2104:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10673,
                  "src": "2104:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2104:9:1"
              }
            ],
            "name": "setRewardToken",
            "nameLocation": "2064:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2087:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2126,
                  "src": "2079:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2079:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2078:16:1"
            },
            "returnParameters": {
              "id": 2118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2114:0:1"
            },
            "scope": 2356,
            "src": "2055:103:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2138,
              "nodeType": "Block",
              "src": "2295:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 2136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2134,
                      "name": "rewardApy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "2305:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2135,
                      "name": "_apy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "2317:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2305:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2137,
                  "nodeType": "ExpressionStatement",
                  "src": "2305:16:1"
                }
              ]
            },
            "documentation": {
              "id": 2127,
              "nodeType": "StructuredDocumentation",
              "src": "2164:80:1",
              "text": " @dev Set the reward APY\n @param _apy The new reward APY"
            },
            "functionSelector": "3b3f5e36",
            "id": 2139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2131,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2285:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10673,
                  "src": "2285:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2285:9:1"
              }
            ],
            "name": "setApy",
            "nameLocation": "2258:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2129,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "2270:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "2265:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2265:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2264:11:1"
            },
            "returnParameters": {
              "id": 2133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2295:0:1"
            },
            "scope": 2356,
            "src": "2249:79:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2155,
              "nodeType": "Block",
              "src": "2630:42:1",
              "statements": [
                {
                  "expression": {
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2149,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2033,
                        "src": "2640:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2151,
                      "indexExpression": {
                        "id": 2150,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "2648:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2640:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2152,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "2658:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2640:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:25:1"
                }
              ]
            },
            "documentation": {
              "id": 2140,
              "nodeType": "StructuredDocumentation",
              "src": "2338:216:1",
              "text": " @dev Adds an oracle address to the oracles mapping\n @param _token The address of the ERC20 token corresponding to the oracle\n @param _oracle The address of the Chainlink oracle contract"
            },
            "functionSelector": "f0ca4adb",
            "id": 2156,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2147,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2146,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2620:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10673,
                  "src": "2620:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:9:1"
              }
            ],
            "name": "addOracle",
            "nameLocation": "2568:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2586:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "2578:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2578:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "2602:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "2594:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2577:33:1"
            },
            "returnParameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2630:0:1"
            },
            "scope": 2356,
            "src": "2559:113:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2186,
              "nodeType": "Block",
              "src": "2972:221:1",
              "statements": [
                {
                  "assignments": [
                    null,
                    2165,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 2165,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2992:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2186,
                      "src": "2985:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 2164,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2985:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 2173,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2167,
                              "name": "oracles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2033,
                              "src": "3028:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 2169,
                            "indexExpression": {
                              "id": 2168,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2159,
                              "src": "3036:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3028:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2166,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2470,
                          "src": "3006:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2470_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 2170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3006:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2470",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 2171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3045:15:1",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2469,
                      "src": "3006:54:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2982:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 2177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2175,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2165,
                          "src": "3080:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3088:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3080:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e50726963653a20707269636520696e76616c6964",
                        "id": 2178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2",
                          "typeString": "literal_string \"TokenPrice: price invalid\""
                        },
                        "value": "TokenPrice: price invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2",
                          "typeString": "literal_string \"TokenPrice: price invalid\""
                        }
                      ],
                      "id": 2174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3072:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3072:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2180,
                  "nodeType": "ExpressionStatement",
                  "src": "3072:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2183,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2165,
                        "src": "3180:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 2182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3172:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2181,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3172:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3172:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2163,
                  "id": 2185,
                  "nodeType": "Return",
                  "src": "3165:21:1"
                }
              ]
            },
            "documentation": {
              "id": 2157,
              "nodeType": "StructuredDocumentation",
              "src": "2678:212:1",
              "text": " @dev Get the USD price of an ERC20 token from its associated Chainlink oracle\n @param _token The ERC20 token for which to get the USD price\n @return The USD price of the ERC20 token"
            },
            "functionSelector": "ff52775d",
            "id": 2187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUSDPriceFromOracle",
            "nameLocation": "2904:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2159,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2934:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2187,
                  "src": "2926:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2926:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2925:16:1"
            },
            "returnParameters": {
              "id": 2163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2187,
                  "src": "2963:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2963:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2962:9:1"
            },
            "scope": 2356,
            "src": "2895:298:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2205,
              "nodeType": "Block",
              "src": "3475:94:1",
              "statements": [
                {
                  "expression": {
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2195,
                        "name": "authorizedContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "3485:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2197,
                      "indexExpression": {
                        "id": 2196,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2190,
                        "src": "3505:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3485:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3518:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3485:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2200,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:37:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2202,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2190,
                        "src": "3552:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2201,
                      "name": "ContractAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2355,
                      "src": "3537:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3537:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2204,
                  "nodeType": "EmitStatement",
                  "src": "3532:30:1"
                }
              ]
            },
            "documentation": {
              "id": 2188,
              "nodeType": "StructuredDocumentation",
              "src": "3199:213:1",
              "text": " @dev Adds an authorized contract that is allowed to generate rewards for users.\n Only the contract owner can call this function.\n @param _contract The address of the authorized contract."
            },
            "functionSelector": "5f539d69",
            "id": 2206,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2193,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2192,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3466:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10673,
                  "src": "3466:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3466:9:1"
              }
            ],
            "name": "addContract",
            "nameLocation": "3426:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2190,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "3446:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2206,
                  "src": "3438:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3437:19:1"
            },
            "returnParameters": {
              "id": 2194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3475:0:1"
            },
            "scope": 2356,
            "src": "3417:152:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2244,
              "nodeType": "Block",
              "src": "4037:219:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2220,
                            "name": "authorizedContracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2037,
                            "src": "4056:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2223,
                          "indexExpression": {
                            "expression": {
                              "id": 2221,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4076:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4080:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4076:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4056:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 2224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4091:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4056:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416363657373206e6f7420617574686f72697a6564",
                        "id": 2226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4097:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b",
                          "typeString": "literal_string \"Access not authorized\""
                        },
                        "value": "Access not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b",
                          "typeString": "literal_string \"Access not authorized\""
                        }
                      ],
                      "id": 2219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4047:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2228,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:75:1"
                },
                {
                  "assignments": [
                    2230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2230,
                      "mutability": "mutable",
                      "name": "rewards",
                      "nameLocation": "4140:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2244,
                      "src": "4132:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2229,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4132:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2235,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2232,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2212,
                        "src": "4173:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 2233,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2214,
                        "src": "4181:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2231,
                      "name": "_getDailyRewardWithAPY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2111,
                      "src": "4150:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$11341_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4150:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4132:57:1"
                },
                {
                  "expression": {
                    "id": 2240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2236,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "4199:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2238,
                      "indexExpression": {
                        "id": 2237,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2209,
                        "src": "4208:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4199:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2239,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2230,
                      "src": "4218:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4199:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2241,
                  "nodeType": "ExpressionStatement",
                  "src": "4199:26:1"
                },
                {
                  "expression": {
                    "id": 2242,
                    "name": "rewards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2230,
                    "src": "4242:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2218,
                  "id": 2243,
                  "nodeType": "Return",
                  "src": "4235:14:1"
                }
              ]
            },
            "documentation": {
              "id": 2207,
              "nodeType": "StructuredDocumentation",
              "src": "3575:363:1",
              "text": " @dev Generates rewards for a user based on the given amount of tokens and the current APY.\n Only authorized contracts can call this function.\n @param _user The address of the user to receive the rewards.\n @param _token The ERC20 token used to generate the rewards.\n @param _amount The amount of tokens to generate rewards for."
            },
            "functionSelector": "78e36865",
            "id": 2245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateRewards",
            "nameLocation": "3952:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2209,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3976:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "3968:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3968:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2212,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3989:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "3983:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$11341",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2211,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2210,
                      "name": "ERC20",
                      "nameLocations": [
                        "3983:5:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11341,
                      "src": "3983:5:1"
                    },
                    "referencedDeclaration": 11341,
                    "src": "3983:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11341",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2214,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4002:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "3997:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3997:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3967:43:1"
            },
            "returnParameters": {
              "id": 2218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "4029:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4029:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4028:9:1"
            },
            "scope": 2356,
            "src": "3943:313:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2291,
              "nodeType": "Block",
              "src": "4554:297:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2252,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2029,
                              "src": "4573:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2255,
                            "indexExpression": {
                              "expression": {
                                "id": 2253,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4582:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4586:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4582:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4573:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2256,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2248,
                            "src": "4596:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4573:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4606:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4573:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073756666696369656e742066756e647320746f20636c61696d",
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4609:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045",
                          "typeString": "literal_string \"No sufficient funds to claim\""
                        },
                        "value": "No sufficient funds to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045",
                          "typeString": "literal_string \"No sufficient funds to claim\""
                        }
                      ],
                      "id": 2251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4564:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4564:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2262,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:77:1"
                },
                {
                  "expression": {
                    "id": 2268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2263,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "4651:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2266,
                      "indexExpression": {
                        "expression": {
                          "id": 2264,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4660:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4664:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4660:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4651:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2267,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2248,
                      "src": "4676:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4651:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2269,
                  "nodeType": "ExpressionStatement",
                  "src": "4651:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2273,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "4717:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 2274,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4730:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4734:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4730:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2276,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2248,
                        "src": "4742:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2270,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11761,
                        "src": "4694:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$11761_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 2272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4704:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11512,
                      "src": "4694:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11419_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4694:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2278,
                  "nodeType": "ExpressionStatement",
                  "src": "4694:56:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2280,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "4781:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 2281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4794:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4798:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4794:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2283,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2029,
                          "src": "4806:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2286,
                        "indexExpression": {
                          "expression": {
                            "id": 2284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4815:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4819:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4815:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4806:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2287,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4828:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4834:9:1",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4828:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2279,
                      "name": "RewardsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "4765:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$11341_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,uint256,uint256)"
                      }
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4765:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2290,
                  "nodeType": "EmitStatement",
                  "src": "4760:84:1"
                }
              ]
            },
            "documentation": {
              "id": 2246,
              "nodeType": "StructuredDocumentation",
              "src": "4262:242:1",
              "text": " @dev Allows a user to claim their rewards in the specified amount of tokens.\n The user must have a balance greater than or equal to the amount being claimed.\n @param _amount The amount of tokens to claim as rewards."
            },
            "functionSelector": "0962ef79",
            "id": 2292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "4518:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2248,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4536:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "4531:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2247,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4530:14:1"
            },
            "returnParameters": {
              "id": 2250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4554:0:1"
            },
            "scope": 2356,
            "src": "4509:342:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2337,
              "nodeType": "Block",
              "src": "5069:295:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2297,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "5088:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2300,
                          "indexExpression": {
                            "expression": {
                              "id": 2298,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5097:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5101:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5097:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5088:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5111:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5088:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073756666696369656e742066756e647320746f20636c61696d",
                        "id": 2303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5114:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045",
                          "typeString": "literal_string \"No sufficient funds to claim\""
                        },
                        "value": "No sufficient funds to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ba5eb2328a748ca07b260d91c8f5d147f492cd1e285822ad5bdec1c58cfe045",
                          "typeString": "literal_string \"No sufficient funds to claim\""
                        }
                      ],
                      "id": 2296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5079:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5079:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2305,
                  "nodeType": "ExpressionStatement",
                  "src": "5079:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2309,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "5179:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 2310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5192:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5196:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5192:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2312,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2029,
                          "src": "5204:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2315,
                        "indexExpression": {
                          "expression": {
                            "id": 2313,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5213:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5217:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5213:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5204:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2306,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11761,
                        "src": "5156:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$11761_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 2308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5166:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11512,
                      "src": "5156:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11419_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:69:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2319,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "5256:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 2320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5269:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5273:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5269:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2322,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2029,
                          "src": "5281:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2325,
                        "indexExpression": {
                          "expression": {
                            "id": 2323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5290:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5294:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5290:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5281:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2326,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5303:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5309:9:1",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5303:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$11341",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2318,
                      "name": "RewardsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "5240:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$11341_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,uint256,uint256)"
                      }
                    },
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5240:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2329,
                  "nodeType": "EmitStatement",
                  "src": "5235:84:1"
                },
                {
                  "expression": {
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2330,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "5329:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2333,
                      "indexExpression": {
                        "expression": {
                          "id": 2331,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5338:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5342:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5338:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5329:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5352:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5329:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:24:1"
                }
              ]
            },
            "documentation": {
              "id": 2293,
              "nodeType": "StructuredDocumentation",
              "src": "4860:168:1",
              "text": " @dev Allows a user to claim all of their available rewards in the reward token.\n The user must have a balance greater than 0 to claim any rewards."
            },
            "functionSelector": "0b83a727",
            "id": 2338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAllRewards",
            "nameLocation": "5042:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5057:2:1"
            },
            "returnParameters": {
              "id": 2295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5069:0:1"
            },
            "scope": 2356,
            "src": "5033:331:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2339,
              "nodeType": "StructuredDocumentation",
              "src": "5373:258:1",
              "text": " @dev Emitted when a user claims rewards.\n @param token The ERC20 token that was claimed.\n @param user The user who claimed the rewards.\n @param amount The amount of tokens claimed.\n @param date The timestamp of the claim."
            },
            "eventSelector": "d92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2",
            "id": 2350,
            "name": "RewardsClaimed",
            "nameLocation": "5642:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2342,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5664:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "5658:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$11341",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2341,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2340,
                      "name": "ERC20",
                      "nameLocations": [
                        "5658:5:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11341,
                      "src": "5658:5:1"
                    },
                    "referencedDeclaration": 11341,
                    "src": "5658:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11341",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2344,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5679:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "5671:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5671:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2346,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5690:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "5685:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2345,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5685:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2348,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "5703:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "5698:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5698:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5657:51:1"
            },
            "src": "5636:73:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2351,
              "nodeType": "StructuredDocumentation",
              "src": "5714:144:1",
              "text": " @dev Emitted when a new contract is added to the system.\n @param contractAdded The address of the contract that was added."
            },
            "eventSelector": "89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e205",
            "id": 2355,
            "name": "ContractAdded",
            "nameLocation": "5869:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2353,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAdded",
                  "nameLocation": "5892:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "5884:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5884:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5883:23:1"
            },
            "src": "5863:44:1"
          }
        ],
        "scope": 2357,
        "src": "580:5329:1",
        "usedErrors": []
      }
    ],
    "src": "33:5878:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0x89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e205": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "contractAdded",
              "type": "address"
            }
          ],
          "name": "ContractAdded",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "RewardsClaimed",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc2D232Ae0D7e35e8B42805CFb258b056C65eB7b0",
      "transactionHash": "0x81686166c84b82c18abcfaf11a4b83d79efb30d8aa763e709b0e8a5822111b5c"
    },
    "80001": {
      "events": {
        "0x89c66952b48f3e96bf1d8ba1b63189520fd988a6979b8b740bd5c5d8dc53e205": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "contractAdded",
              "type": "address"
            }
          ],
          "name": "ContractAdded",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xd92c424393cb3ccdf7d5e36602e3bfa34f24490579ba47978f4bcfad496995f2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "RewardsClaimed",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2952E500092C07d6FAC62f4f789cd59BA44C9993",
      "transactionHash": "0xe462e78edc957441853516e6501dffcb6247fb75ed235eab2b9ebafdf6ff84d8"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-10T18:04:39.988Z",
  "devdoc": {
    "details": "This contract manages the distribution of rewards in the form of an ERC20 token (HODL) to users who hold specific ERC20 tokens.",
    "events": {
      "ContractAdded(address)": {
        "details": "Emitted when a new contract is added to the system.",
        "params": {
          "contractAdded": "The address of the contract that was added."
        }
      },
      "RewardsClaimed(address,address,uint256,uint256)": {
        "details": "Emitted when a user claims rewards.",
        "params": {
          "amount": "The amount of tokens claimed.",
          "date": "The timestamp of the claim.",
          "token": "The ERC20 token that was claimed.",
          "user": "The user who claimed the rewards."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addContract(address)": {
        "details": "Adds an authorized contract that is allowed to generate rewards for users. Only the contract owner can call this function.",
        "params": {
          "_contract": "The address of the authorized contract."
        }
      },
      "addOracle(address,address)": {
        "details": "Adds an oracle address to the oracles mapping",
        "params": {
          "_oracle": "The address of the Chainlink oracle contract",
          "_token": "The address of the ERC20 token corresponding to the oracle"
        }
      },
      "claimAllRewards()": {
        "details": "Allows a user to claim all of their available rewards in the reward token. The user must have a balance greater than 0 to claim any rewards."
      },
      "claimRewards(uint256)": {
        "details": "Allows a user to claim their rewards in the specified amount of tokens. The user must have a balance greater than or equal to the amount being claimed.",
        "params": {
          "_amount": "The amount of tokens to claim as rewards."
        }
      },
      "constructor": {
        "details": "Constructor function",
        "params": {
          "_rewardApy": "The annual percentage yield (APY) for the reward token",
          "_rewardTokenAddress": "The address of the reward token (HODL)"
        }
      },
      "generateRewards(address,address,uint256)": {
        "details": "Generates rewards for a user based on the given amount of tokens and the current APY. Only authorized contracts can call this function.",
        "params": {
          "_amount": "The amount of tokens to generate rewards for.",
          "_token": "The ERC20 token used to generate the rewards.",
          "_user": "The address of the user to receive the rewards."
        }
      },
      "getUSDPriceFromOracle(address)": {
        "details": "Get the USD price of an ERC20 token from its associated Chainlink oracle",
        "params": {
          "_token": "The ERC20 token for which to get the USD price"
        },
        "returns": {
          "_0": "The USD price of the ERC20 token"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setApy(uint256)": {
        "details": "Set the reward APY",
        "params": {
          "_apy": "The new reward APY"
        }
      },
      "setRewardToken(address)": {
        "details": "Set the reward token ",
        "params": {
          "_token": "The address of the new reward token"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "HodlUpRewardsManager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}