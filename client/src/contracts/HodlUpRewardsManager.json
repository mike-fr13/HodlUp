{
  "contractName": "HodlUpRewardsManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardApy",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPriceFromOracle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardApy\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPriceFromOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HodlUpRewardsManager.sol\":\"HodlUpRewardsManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/HodlUpRewardsManager.sol\":{\"keccak256\":\"0xa22f1aeebec3a8d7ab13e48ab76dc78be0c1332da3054724849fa0065166ea2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fa5cd9f9fb99e6a7f438a5046e88444b5ca4fd7b1e347c47fb215352d61bbb3\",\"dweb:/ipfs/QmYqHK8bRdt8iq2hdGb7m9eKJFhdvsPXkQJ4RxSDCQyAhp\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"project:/node_modules/@ganache/console.log/console.sol\":{\"keccak256\":\"0xb7d3d296bc4cede8da1a46559b7fb11dfe82757d7ae2d7f0f22859761794f500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b572aed3d333f704b3d87e065abce1016f351ed2fc657cc1bb30435365e88ea\",\"dweb:/ipfs/QmNsCBbrV4BPxQFsH9o3A6iVtBnvBaxmN9sc8uW6H3YYhz\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161059738038061059783398101604081905261002f916100b1565b61003833610061565b600180546001600160a01b0319166001600160a01b0393909316929092179091556002556100eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100c457600080fd5b82516001600160a01b03811681146100db57600080fd5b6020939093015192949293505050565b61049d806100fa6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063538e573c14610051578063715018a6146100775780638da5cb5b14610081578063f2fde38b1461009c575b600080fd5b61006461005f3660046103a5565b6100af565b6040519081526020015b60405180910390f35b61007f610207565b005b6000546040516001600160a01b03909116815260200161006e565b61007f6100aa3660046103a5565b61021b565b60008073ab594600376ec9fd91f8e885dadf0ce036862de090506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012d91906103f4565b505050915050600081136101885760405162461bcd60e51b815260206004820152601960248201527f546f6b656e50726963653a20707269636520696e76616c69640000000000000060448201526064015b60405180910390fd5b8061019281610294565b6101ff836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610444565b60ff16610294565b949350505050565b61020f6102d9565b6102196000610333565b565b6102236102d9565b6001600160a01b0381166102885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017f565b61029181610333565b50565b610291816040516024016102aa91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b179052610383565b6000546001600160a01b031633146102195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f6790602083016000808383865afa5050505050565b6000602082840312156103b757600080fd5b81356001600160a01b03811681146103ce57600080fd5b9392505050565b805169ffffffffffffffffffff811681146103ef57600080fd5b919050565b600080600080600060a0868803121561040c57600080fd5b610415866103d5565b9450602086015193506040860151925060608601519150610438608087016103d5565b90509295509295909350565b60006020828403121561045657600080fd5b815160ff811681146103ce57600080fdfea2646970667358221220a1bd762f60adc06d40f0af8577db1de8f2873f59fec0cb480f81e03b9cbc491b64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063538e573c14610051578063715018a6146100775780638da5cb5b14610081578063f2fde38b1461009c575b600080fd5b61006461005f3660046103a5565b6100af565b6040519081526020015b60405180910390f35b61007f610207565b005b6000546040516001600160a01b03909116815260200161006e565b61007f6100aa3660046103a5565b61021b565b60008073ab594600376ec9fd91f8e885dadf0ce036862de090506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012d91906103f4565b505050915050600081136101885760405162461bcd60e51b815260206004820152601960248201527f546f6b656e50726963653a20707269636520696e76616c69640000000000000060448201526064015b60405180910390fd5b8061019281610294565b6101ff836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610444565b60ff16610294565b949350505050565b61020f6102d9565b6102196000610333565b565b6102236102d9565b6001600160a01b0381166102885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017f565b61029181610333565b50565b610291816040516024016102aa91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b179052610383565b6000546001600160a01b031633146102195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f6790602083016000808383865afa5050505050565b6000602082840312156103b757600080fd5b81356001600160a01b03811681146103ce57600080fd5b9392505050565b805169ffffffffffffffffffff811681146103ef57600080fd5b919050565b600080600080600060a0868803121561040c57600080fd5b610415866103d5565b9450602086015193506040860151925060608601519150610438608087016103d5565b90509295509295909350565b60006020828403121561045657600080fd5b815160ff811681146103ce57600080fdfea2646970667358221220a1bd762f60adc06d40f0af8577db1de8f2873f59fec0cb480f81e03b9cbc491b64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:367:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "112:253:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "133:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "142:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "129:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "129:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "154:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "122:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "183:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "202:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "196:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "187:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "275:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "277:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "277:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "234:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "245:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "260:3:11",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "265:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "256:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "256:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "269:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "241:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "241:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "231:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "224:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "221:70:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "300:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "310:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "324:35:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "355:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "334:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "334:25:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "324:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:11",
                "type": ""
              }
            ],
            "src": "14:351:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2754:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:11",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:11",
                "type": ""
              }
            ],
            "src": "14:286:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "469:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:11",
                "type": ""
              }
            ],
            "src": "305:177:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "588:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "598:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "610:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "606:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "606:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "598:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "640:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "655:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "671:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "676:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "667:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "667:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "680:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "663:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "663:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "651:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "633:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "633:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "557:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "568:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "579:4:11",
                "type": ""
              }
            ],
            "src": "487:203:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "754:120:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "764:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "779:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "773:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "764:5:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "852:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "861:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "864:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "854:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "854:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "854:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "808:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "819:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "826:22:11",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "815:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "815:34:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "805:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:45:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "798:53:11"
                  },
                  "nodeType": "YulIf",
                  "src": "795:73:11"
                }
              ]
            },
            "name": "abi_decode_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "733:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "744:5:11",
                "type": ""
              }
            ],
            "src": "695:179:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1025:327:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1072:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1081:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1084:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1074:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1074:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1074:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1046:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1055:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1042:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1042:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1067:3:11",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1038:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1035:53:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1097:49:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1136:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1107:28:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1107:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1097:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1155:35:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1175:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1186:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1165:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1165:25:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1155:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1199:35:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1219:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1230:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1215:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1215:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1209:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1209:25:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1199:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1243:35:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1263:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1274:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1259:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1259:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1253:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1253:25:11"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1243:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1287:59:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1330:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1341:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1326:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1326:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1297:28:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1297:49:11"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1287:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "959:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "970:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "982:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "990:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "998:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1006:6:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1014:6:11",
                "type": ""
              }
            ],
            "src": "879:473:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:175:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1548:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1559:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1541:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1541:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1582:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1593:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1578:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1578:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1598:2:11",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1571:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1571:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1571:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1621:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1632:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1617:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1617:18:11"
                      },
                      {
                        "hexValue": "546f6b656e50726963653a20707269636520696e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1637:27:11",
                        "type": "",
                        "value": "TokenPrice: price invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1610:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1610:55:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1610:55:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1674:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1686:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1697:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1682:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1682:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1674:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1508:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1522:4:11",
                "type": ""
              }
            ],
            "src": "1357:349:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1790:194:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1836:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1845:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1848:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1838:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1838:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1838:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1811:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1820:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1807:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1807:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1832:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1803:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1803:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1800:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1861:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1880:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1874:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1874:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1865:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1938:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1947:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1950:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1940:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1940:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1940:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1912:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1923:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1930:4:11",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1919:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1919:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1909:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1909:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1899:55:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1963:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1973:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1963:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1756:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1767:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1779:6:11",
                "type": ""
              }
            ],
            "src": "1711:273:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2163:228:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2180:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2191:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2173:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2173:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2214:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2225:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2210:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2210:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2230:2:11",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2203:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2203:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2203:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2253:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2264:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2249:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2249:18:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2269:34:11",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2242:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2242:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2324:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2335:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2320:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2320:18:11"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2340:8:11",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2313:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2313:36:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2313:36:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2358:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2370:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2381:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2366:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2358:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2140:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2154:4:11",
                "type": ""
              }
            ],
            "src": "1989:402:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2570:182:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2587:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2598:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2580:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2580:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2621:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2632:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2617:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2617:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2637:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2610:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2610:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2660:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2671:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2656:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2656:18:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2676:34:11",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2649:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2649:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2649:62:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2720:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2732:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2743:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2728:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2728:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2720:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2547:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2561:4:11",
                "type": ""
              }
            ],
            "src": "2396:356:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"TokenPrice: price invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "536:2612:0:-:0;;;708:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:3;719:10:10;936:18:3;:32::i;:::-;776:11:0;:40;;-1:-1:-1;;;;;;776:40:0;-1:-1:-1;;;;;776:40:0;;;;;;;;;;;826:9;:22;536:2612;;2433:187:3;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:351:11:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:11;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:11:o;:::-;536:2612:0;;;;;;",
  "deployedSourceMap": "536:2612:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:528;;;;;;:::i;:::-;;:::i;:::-;;;451:25:11;;;439:2;424:18;861:528:0;;;;;;;;1831:101:3;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:3;;;633:51:11;;621:2;606:18;1201:85:3;487:203:11;2081:198:3;;;;;;:::i;:::-;;:::i;861:528:0:-;927:7;1029:31;1085:42;1029:99;;1141:12;1162:9;-1:-1:-1;;;;;1162:25:0;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1138:51;;;;;;1215:1;1207:5;:9;1199:47;;;;-1:-1:-1;;;1199:47:0;;1559:2:11;1199:47:0;;;1541:21:11;1598:2;1578:18;;;1571:30;1637:27;1617:18;;;1610:55;1682:18;;1199:47:0;;;;;;;;;1281:5;1297:19;1281:5;1297:11;:19::i;:::-;1326:33;1338:9;-1:-1:-1;;;;;1338:18:0;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1326:33;;:11;:33::i;:::-;1376:6;861:528;-1:-1:-1;;;;861:528:0:o;1831:101:3:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:3;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:3;;2191:2:11;2161:73:3::1;::::0;::::1;2173:21:11::0;2230:2;2210:18;;;2203:30;2269:34;2249:18;;;2242:62;-1:-1:-1;;;2320:18:11;;;2313:36;2366:19;;2161:73:3::1;1989:402:11::0;2161:73:3::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6368:122:2:-;6420:63;6476:5;6436:46;;;;;;451:25:11;;439:2;424:18;;305:177;6436:46:2;;;;-1:-1:-1;;6436:46:2;;;;;;;;;;;;;;-1:-1:-1;;;;;6436:46:2;-1:-1:-1;;;6436:46:2;;;6420:15;:63::i;1359:130:3:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:3;719:10:10;1422:23:3;1414:68;;;;-1:-1:-1;;;1414:68:3;;2598:2:11;1414:68:3;;;2580:21:11;;;2617:18;;;2610:30;2676:34;2656:18;;;2649:62;2728:18;;1414:68:3;2396:356:11;2433:187:3;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;182:339:2:-;348:14;;132:42;;411:2;398:16;;252:22;;348:14;398:16;132:42;442:5;431:73;427:78;;;311:204;182:339;:::o;14:286:11:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:11;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:11:o;695:179::-;773:13;;826:22;815:34;;805:45;;795:73;;864:1;861;854:12;795:73;695:179;;;:::o;879:473::-;982:6;990;998;1006;1014;1067:3;1055:9;1046:7;1042:23;1038:33;1035:53;;;1084:1;1081;1074:12;1035:53;1107:39;1136:9;1107:39;:::i;:::-;1097:49;;1186:2;1175:9;1171:18;1165:25;1155:35;;1230:2;1219:9;1215:18;1209:25;1199:35;;1274:2;1263:9;1259:18;1253:25;1243:35;;1297:49;1341:3;1330:9;1326:19;1297:49;:::i;:::-;1287:59;;879:473;;;;;;;;:::o;1711:273::-;1779:6;1832:2;1820:9;1811:7;1807:23;1803:32;1800:52;;;1848:1;1845;1838:12;1800:52;1880:9;1874:16;1930:4;1923:5;1919:16;1912:5;1909:27;1899:55;;1950:1;1947;1940:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport \"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"../node_modules/@ganache/console.log/console.sol\";\nusing SafeERC20 for IERC20;\n\ncontract HodlUpRewardsManager is Ownable {\n\n    ERC20 rewardToken;\n    uint rewardApy;\n    mapping(address => uint) balances;\n    mapping(address => address) oracles;\n\n    constructor(address _rewardTokenAddress, uint _rewardApy) {\n        rewardToken = ERC20(_rewardTokenAddress);\n        rewardApy = _rewardApy;\n    }\n\n    function getPriceFromOracle(address token) external view returns (uint256) {\n        //AggregatorV3Interface priceFeed = AggregatorV3Interface(oracles[token]);\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xAB594600376Ec9fD91F8e885dADF0CE036862dE0);\n        (, int256 price, , ,) = priceFeed.latestRoundData();\n        require(price > 0, \"TokenPrice: price invalid\");\n        uint256 result = uint256(price);\n        console.log(result);\n        console.log(priceFeed.decimals());\n        return result;\n    }\n\n\n    // function getPriceFromOracle(address token) external view returns (uint256) {\n    //     //AggregatorV3Interface priceFeed = AggregatorV3Interface(oracles[token]);\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x3D49406EDd4D52Fb7FFd25485f32E073b529C924);\n    //     (, int256 price, , ,) = priceFeed.latestRoundData();\n    //     require(price > 0, \"TokenPrice: price invalid\");\n    //     return uint256(price);\n    // }\n\n// creer un mapping address de token et address de contrat oracle:     mapping(address => address) oracles;\n// ajout d'entrée dans mapping\n// \n// MATIC   USD   0xAB594600376Ec9fD91F8e885dADF0CE036862dE0\n// USDT    USD   0x0A6513e40db6EB1b165753AD52E80663aeA50545\n// USDC    USD   0xfE4A8cc5b5B2366C1B58Bea3858e81843581b2F7\n// SAND    USD   0x3D49406EDd4D52Fb7FFd25485f32E073b529C924\n//\n// claim Rewards\n\n//   address private oracleAddress;\n//     AggregatorV3Interface private priceFeed;\n    \n//     constructor(address _oracleAddress) {\n//         oracleAddress = _oracleAddress;\n//         priceFeed = AggregatorV3Interface(oracleAddress);\n//     }\n    \n//     function getTokenPrice(address token) external view returns (uint256) {\n//         uint256 price = getPriceFromOracle(token);\n//         uint256 decimals = IERC20(token).decimals();\n//         uint256 tokenAmount = 10**decimals;\n//         return price * tokenAmount;\n//     }\n    \n//     function getPriceFromOracle(address token) internal view returns (uint256) {\n//         (, int256 price, , ,) = priceFeed.latestRoundData();\n//         require(price > 0, \"TokenPrice: price invalid\");\n//         uint8 decimals = priceFeed.decimals();\n//         uint256 usdPrice = uint256(price) * (10**decimals);\n//         return usdPrice;\n//     }\n\n}\n\n",
  "sourcePath": "/home/sjouany/ProjetFinal/HodlUp/truffle/contracts/HodlUpRewardsManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/HodlUpRewardsManager.sol",
    "exportedSymbols": {
      "Address": [
        9763
      ],
      "AggregatorV3Interface": [
        142
      ],
      "Context": [
        9785
      ],
      "ERC20": [
        9013
      ],
      "HodlUpRewardsManager": [
        96
      ],
      "IERC20": [
        9091
      ],
      "IERC20Metadata": [
        9116
      ],
      "IERC20Permit": [
        9152
      ],
      "Ownable": [
        8426
      ],
      "SafeERC20": [
        9433
      ],
      "console": [
        8313
      ]
    },
    "id": 97,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 143,
        "src": "59:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 8427,
        "src": "152:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 9092,
        "src": "221:72:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 9014,
        "src": "294:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 9434,
        "src": "366:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@ganache/console.log/console.sol",
        "file": "../node_modules/@ganache/console.log/console.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 8314,
        "src": "448:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "global": false,
        "id": 11,
        "libraryName": {
          "id": 8,
          "name": "SafeERC20",
          "nameLocations": [
            "513:9:0"
          ],
          "nodeType": "IdentifierPath",
          "referencedDeclaration": 9433,
          "src": "513:9:0"
        },
        "nodeType": "UsingForDirective",
        "src": "507:27:0",
        "typeName": {
          "id": 10,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 9,
            "name": "IERC20",
            "nameLocations": [
              "527:6:0"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 9091,
            "src": "527:6:0"
          },
          "referencedDeclaration": 9091,
          "src": "527:6:0",
          "typeDescriptions": {
            "typeIdentifier": "t_contract$_IERC20_$9091",
            "typeString": "contract IERC20"
          }
        }
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12,
              "name": "Ownable",
              "nameLocations": [
                "569:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8426,
              "src": "569:7:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "569:7:0"
          }
        ],
        "canonicalName": "HodlUpRewardsManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96,
          8426,
          9785
        ],
        "name": "HodlUpRewardsManager",
        "nameLocation": "545:20:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "590:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "584:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$9013",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "ERC20",
                "nameLocations": [
                  "584:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9013,
                "src": "584:5:0"
              },
              "referencedDeclaration": 9013,
              "src": "584:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$9013",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "rewardApy",
            "nameLocation": "612:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "607:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "607:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "652:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "627:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "635:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "627:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 20,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "646:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "oracles",
            "nameLocation": "694:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "666:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 25,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "674:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "666:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "685:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "766:89:0",
              "statements": [
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "776:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$9013",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35,
                          "name": "_rewardTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "796:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9013,
                        "src": "790:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$9013_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "790:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$9013",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "776:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$9013",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "776:40:0"
                },
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "rewardApy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "826:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40,
                      "name": "_rewardApy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "838:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "826:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "826:22:0"
                }
              ]
            },
            "id": 44,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_rewardTokenAddress",
                  "nameLocation": "728:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "720:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_rewardApy",
                  "nameLocation": "754:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "749:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "719:46:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:0:0"
            },
            "scope": 96,
            "src": "708:147:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "936:453:0",
              "statements": [
                {
                  "assignments": [
                    53
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "1051:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "1029:31:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$142",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 52,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51,
                          "name": "AggregatorV3Interface",
                          "nameLocations": [
                            "1029:21:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "1029:21:0"
                        },
                        "referencedDeclaration": 142,
                        "src": "1029:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$142",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307841423539343630303337364563396644393146386538383564414446304345303336383632644530",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1085:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xAB594600376Ec9fD91F8e885dADF0CE036862dE0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 54,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "1063:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$142_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1063:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$142",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1029:99:0"
                },
                {
                  "assignments": [
                    null,
                    59,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1148:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "1141:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1141:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 63,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 60,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1162:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$142",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1172:15:0",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 141,
                      "src": "1162:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1138:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "1207:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1215:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1207:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e50726963653a20707269636520696e76616c6964",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2",
                          "typeString": "literal_string \"TokenPrice: price invalid\""
                        },
                        "value": "TokenPrice: price invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c6d6e8d25c846766030b68a8f6adb0a24c90e0db413882607d12800d3a986a2",
                          "typeString": "literal_string \"TokenPrice: price invalid\""
                        }
                      ],
                      "id": 64,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1199:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1199:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:47:0"
                },
                {
                  "assignments": [
                    72
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1264:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "1256:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 71,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1256:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1281:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1273:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1273:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1273:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1256:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1309:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8313,
                        "src": "1297:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8313_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1305:3:0",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 788,
                      "src": "1297:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:19:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1338:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$142",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1348:8:0",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103,
                          "src": "1338:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1338:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 84,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8313,
                        "src": "1326:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8313_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1334:3:0",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 788,
                      "src": "1326:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1326:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1326:33:0"
                },
                {
                  "expression": {
                    "id": 92,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "1376:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 50,
                  "id": 93,
                  "nodeType": "Return",
                  "src": "1369:13:0"
                }
              ]
            },
            "functionSelector": "538e573c",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceFromOracle",
            "nameLocation": "870:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "897:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "889:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "888:15:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "927:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:9:0"
            },
            "scope": 96,
            "src": "861:528:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 97,
        "src": "536:2612:0",
        "usedErrors": []
      }
    ],
    "src": "33:3117:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDA273F1b4BcC49D82F68D1D44c3AbADf2e311588",
      "transactionHash": "0x07b14763302861566e2e85e951148e3856a9e3fa7e00f9ee8fd81875224fc15d"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-05T22:57:34.693Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}